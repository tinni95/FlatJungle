{"version":3,"sources":["components/logo/logo.svg","components/loader/index.js","reducers/auth.js","actions/types.js","reducers/modal.js","reducers/register.js","reducers/userprofile.js","reducers/home.js","reducers/users.js","reducers/forum.js","reducers/thread.js","reducers/index.js","store.js","components/logo/index.js","components/navlink/index.js","components/button/index.js","components/usermenu/guestnav.js","components/avatar/index.js","components/usermenu/usernav.js","components/usermenu/index.js","api/constants.js","utils/config.js","api/forum.js","api/thread.js","api/image.js","actions/modal.js","utils/errorhandler.js","actions/auth.js","api/user.js","actions/register.js","actions/userprofile.js","actions/home.js","actions/users.js","actions/forum.js","actions/thread.js","actions/post.js","api/post.js","containers/header/index.js","components/statusmessage/index.js","components/register/index.js","components/modal/index.js","containers/modal/register.js","components/login/index.js","containers/modal/login.js","components/editprofile/index.js","containers/modal/editprofile.js","containers/modal/index.js","components/profile/index.js","containers/userprofile/index.js","components/usercard/index.js","components/userlist/index.js","containers/users/index.js","components/richeditor/index.js","components/post/index.js","components/newpost/index.js","components/thread/index.js","containers/thread/index.js","components/forumlist/index.js","containers/home/index.js","components/threadlist/index.js","components/newthread/index.js","containers/forum/index.js","components/notfoundpage/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Loader","props","react_default","a","createElement","className","loginInitialState","isLoading","isAuthenticated","username","name","avatar","token","isStaff","error","editInitialState","isEditing","editError","editSuccess","initialState","Object","objectSpread","auth","state","arguments","length","undefined","action","type","modalType","modalProps","modal","register","profile","userProfile","forums","home","users","forumInitialState","slug","description","threads","newThreadInitialState","newThreadLoading","newThreadSuccess","newThreadName","newThreadContent","newThreadId","newThreadError","newThreadShow","forum","newThread","content","id","pinned","creator","createdt","posts","newPostSuccess","newPostLoading","newPostError","deletePostList","isDeleting","deleteError","thread","createdAt","created_at","concat","toConsumableArray","filter","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","Logo","src","logo","alt","Navlink","components_logo","Icon","react_router_dom","to","Button","this","disabled","loading","onClick","loader","children","Component","defaultProps","GuestNav","_this$props","showLogin","showRegister","button_Button","Avatar","centered","link","test","replace","avatarComponent","Image","UserNav","logout","showEditProfile","history","Menu","fluid","inverted","borderless","size","Item","components_avatar","Dropdown","item","simple","text","direction","push","icon","withRouter","UserMenu","usernav","guestnav","API_URL","process","USER_URL","FORUM_URL","THREAD_URL","POST_URL","getConfig","getState","headers","Authorization","fetchForumApi","axios","get","fetchThreadApi","imageUploadApi","file","transform","formData","FormData","append","upload_preset","post","showModal","apiErrorHandler","response","data","erd","detail","keys","errorString","indexOf","errorField","String","charAt","toUpperCase","substring","console","log","login","password","dispatch","loginRequest","loginApi","then","loginSuccess","catch","errorMessage","loginFailure","is_staff","editProfile","newProfile","editProfileRequest","put","editProfileApi","editProfileSuccess","editProfileFailure","registerRequest","registerApi","registerSuccess","registerFailure","fetchUserProfile","fetchUserProfileRequest","fetchUserProfileApi","fetchUserProfileSuccess","fetchUserProfileFailure","fetchForums","fetchHomeRequest","fetchHomeSuccess","fetchHomeFailure","fetchUsers","fetchUsersRequest","fetchUsersSuccess","fetchUsersFailure","fetchForumRequest","fetchForumSuccess","fetchForumFailure","fetchThreadRequest","fetchThreadSuccess","fetchThreadFailure","createThread","createThreadRequest","createThreadApi","createThreadSuccess","createThreadFailure","deleteThread","deleteThreadRequest","delete","deleteThreadApi","deleteThreadSuccess","deleteThreadFailure","createPost","newPost","createPostRequest","createPostApi","createPostSuccess","thread_id","createPostFailure","deletePost","threadID","deletePostRequest","deletePostApi","deletePostSuccess","deletePostFailure","HeaderContainer","handleLogout","navlink","usermenu","connect","StatusMessage","loadingClassName","loadingMessage","errorClassName","success","successClassName","successMessage","nothing","nothingClassName","nothingMessage","Message","attached","Content","Header","positive","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_ref","value","setState","defineProperty","handleCheckbox","checked","isFormValid","_this$state","email","handleSubmit","handleRegister","statusMessage","statusmessage_StatusMessage","header","Form","Input","required","label","placeholder","onChange","Checkbox","inline","Button_Button","color","warning","Modal","listenKeyboard","event","keyCode","onClose","closeModal","onDialogClick","stopPropagation","addEventListener","removeEventListener","overlayStyle","contentStyle","dialogStyle","style","RegisterModal","handleClose","modal_Modal","register_Register","Login","handleLogin","LoginModal","login_Login","EditProfile","onImageDrop","files","avatarFile","current_password","currentPassword","new_password","newPassword","bio","status","handleEdit","avatarUploading","secure_url","avatarError","_this$props2","_this$state2","avatarURL","preview","Grid","celled","columns","Column","Field","dist_es","onDrop","multiple","accept","control","TextArea","EditProfileModal","minWidth","editprofile_EditProfile","modal_register","modal_login","editprofile","Profile","datetime","split","dateJoined","UserProfileContainer","match","params","newProps","oldUsername","futureUsername","date_joined","components_profile","UserCard","Card","Meta","fontSize","UserList","userCardList","map","user","usercard","UsersContainer","userlist_UserList","RichEditor","convertToEditorState","editorState","EditorState","createEmpty","contentState","convertFromRaw","JSON","parse","createWithContent","ContentState","createFromText","onEditorStateChange","uploadImageCallBack","Promise","resolve","reject","newResponse","newEditorState","newContent","readOnly","wrapperClassName","toolbarClassName","editorClassName","handleBeforeInput","handlePastedText","dist_react_draft_wysiwyg","toolbar","options","inDropdown","list","textAlign","image","uploadCallback","present","previewImage","fontFamily","toolbarHidden","Post","onDelete","deleteAction","isThread","authenticatedUsername","authenticatedIsStaff","deleteText","actions","Segment","padded","width","Row","richeditor_RichEditor","NewPost","onSubmit","stringify","convertToRaw","getCurrentContent","isValidLength","maxLength","getPlainText","input","html","contentBlock","htmlToDraft","entityMap","forEach","mergeEntityData","Modifier","replaceWithFragment","getSelection","List","contentBlocks","selectedBlock","getSelectedBlock","newState","replaceText","getCurrentInlineStyle","Thread","threadPost","post_Post","postsList","postID","postContent","postCreatedAt","postCreator","Group","newpost_NewPost","ThreadContainer","fetchThread","thread_Thread","ForumList","forumCardList","posts_count","threads_count","last_activity","lastActivity","thread_name","naturaltime","vertical","paddingBottom","HomeContainer","forumlist_ForumList","ThreadList","threadList","replies_count","NewThread","toggleShowEditor","onSave","updateNewThread","onCancel","onNameChange","newName","_this$props3","showEditor","_this$state3","transparent","iconPosition","Divider","role","floated","ForumContainer","fetchForum","oldForum","futureForum","createThreadSave","createThreadToggle","newthread_NewThread","threadlist_ThreadList","NotFoundPage","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","es","integration_react","react","react_router","path","component","exact","containers_modal","document","getElementById","URL","origin","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a5a30a83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e17eab33.svg\";","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Loader = props => {\r\n  return (\r\n    <div className={props.className || 'loader'}>\r\n      <div className=\"loader-spinning-wheel\" />\r\n    </div>\r\n  );\r\n};\r\nexport default Loader;\r\n","import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGIN_RESET,\r\n  EDIT_PROFILE_REQUEST,\r\n  EDIT_PROFILE_SUCCESS,\r\n  EDIT_PROFILE_FAILURE,\r\n  EDIT_PROFILE_RESET,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst loginInitialState = {\r\n  isLoading: false,\r\n  isAuthenticated: false,\r\n  username: null,\r\n  name: null,\r\n  avatar: null,\r\n  token: null,\r\n  isStaff: false,\r\n  error: null,\r\n};\r\n\r\nconst editInitialState = {\r\n  isEditing: false,\r\n  editError: null,\r\n  editSuccess: false,\r\n};\r\n\r\nconst initialState = {\r\n  ...loginInitialState,\r\n  ...editInitialState,\r\n};\r\n\r\nconst auth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isAuthenticated: false,\r\n        error: null,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isAuthenticated: true,\r\n        token: action.token,\r\n        username: action.username,\r\n        avatar: action.avatar,\r\n        name: action.name,\r\n        isStaff: action.isStaff,\r\n        error: null,\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        ...loginInitialState,\r\n        error: action.error,\r\n      };\r\n    case EDIT_PROFILE_REQUEST:\r\n      return {\r\n        ...state,\r\n        isEditing: true,\r\n        editError: null,\r\n        editSuccess: false,\r\n      };\r\n    case EDIT_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isEditing: false,\r\n        editError: null,\r\n        editSuccess: true,\r\n        avatar: action.avatar || state.avatar,\r\n        name: action.name || state.name,\r\n      };\r\n    case EDIT_PROFILE_FAILURE:\r\n      return {\r\n        ...state,\r\n        ...editInitialState,\r\n        editError: action.error,\r\n      };\r\n    case EDIT_PROFILE_RESET:\r\n      return {\r\n        ...state,\r\n        ...editInitialState,\r\n      };\r\n    case LOGIN_RESET:\r\n      return {\r\n        ...state,\r\n        ...loginInitialState,\r\n      };\r\n    case LOGOUT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const LOGIN_RESET = 'LOGIN_RESET';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\r\nexport const REGISTER_RESET = 'REGISTER_RESET';\r\nexport const SHOW_MODAL = 'SHOW_MODAL';\r\nexport const HIDE_MODAL = 'HIDE_MODAL';\r\nexport const EDIT_PROFILE_REQUEST = 'EDIT_PROFILE_REQUEST';\r\nexport const EDIT_PROFILE_SUCCESS = 'EDIT_PROFILE_SUCCESS';\r\nexport const EDIT_PROFILE_FAILURE = 'EDIT_PROFILE_FAILURE';\r\nexport const EDIT_PROFILE_RESET = 'EDIT_PROFILE_RESET';\r\nexport const FETCH_USER_PROFILE_REQUEST = 'FETCH_USER_PROFILE_REQUEST';\r\nexport const FETCH_USER_PROFILE_SUCCESS = 'FETCH_USER_PROFILE_SUCCESS';\r\nexport const FETCH_USER_PROFILE_FAILURE = 'FETCH_USER_PROFILE_FAILURE';\r\nexport const FETCH_HOME_REQUEST = 'FETCH_HOME_REQUEST';\r\nexport const FETCH_HOME_SUCCESS = 'FETCH_HOME_SUCCESS';\r\nexport const FETCH_HOME_FAILURE = 'FETCH_HOME_FAILURE';\r\nexport const FETCH_FORUM_REQUEST = 'FETCH_FORUM_REQUEST';\r\nexport const FETCH_FORUM_SUCCESS = 'FETCH_FORUM_SUCCESS';\r\nexport const FETCH_FORUM_FAILURE = 'FETCH_FORUM_FAILURE';\r\nexport const FETCH_THREAD_REQUEST = 'FETCH_THREAD_REQUEST';\r\nexport const FETCH_THREAD_SUCCESS = 'FETCH_THREAD_SUCCESS';\r\nexport const FETCH_THREAD_FAILURE = 'FETCH_THREAD_FAILURE';\r\nexport const CREATE_THREAD_REQUEST = 'CREATE_THREAD_REQUEST';\r\nexport const CREATE_THREAD_SUCCESS = 'CREATE_THREAD_SUCCESS';\r\nexport const CREATE_THREAD_FAILURE = 'CREATE_THREAD_FAILURE';\r\nexport const CREATE_THREAD_SAVE = 'CREATE_THREAD_SAVE';\r\nexport const CREATE_THREAD_TOGGLE = 'CREATE_THREAD_TOGGLE';\r\nexport const CREATE_POST_REQUEST = 'CREATE_POST_REQUEST';\r\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\r\nexport const CREATE_POST_FAILURE = 'CREATE_POST_FAILURE';\r\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\r\nexport const DELETE_THREAD_REQUEST = 'DELETE_THREAD_REQUEST';\r\nexport const DELETE_THREAD_SUCCESS = 'DELETE_THREAD_SUCCESS';\r\nexport const DELETE_THREAD_FAILURE = 'DELETE_THREAD_FAILURE';\r\nexport const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST';\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\r\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE';\r\n","import {SHOW_MODAL, HIDE_MODAL} from '../actions/types';\r\n\r\nconst initialState = {\r\n  modalType: null,\r\n  modalProps: {},\r\n};\r\n\r\nconst modal = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_MODAL:\r\n      return {\r\n        modalType: action.modalType,\r\n        modalProps: action.modalProps,\r\n      };\r\n    case HIDE_MODAL:\r\n      return {\r\n        modalType: null,\r\n        modalProps: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modal;\r\n","import {\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILURE,\r\n  REGISTER_RESET,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst register = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REGISTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case REGISTER_FAILURE:\r\n      return {\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case REGISTER_RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default register;\r\n","import {\r\n  FETCH_USER_PROFILE_REQUEST,\r\n  FETCH_USER_PROFILE_SUCCESS,\r\n  FETCH_USER_PROFILE_FAILURE,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  profile: null,\r\n  error: null,\r\n};\r\n\r\nconst userProfile = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER_PROFILE_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_USER_PROFILE_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        profile: action.profile,\r\n        error: null,\r\n      };\r\n    case FETCH_USER_PROFILE_FAILURE:\r\n      return {\r\n        ...initialState,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userProfile;\r\n","import {\r\n  FETCH_HOME_REQUEST,\r\n  FETCH_HOME_SUCCESS,\r\n  FETCH_HOME_FAILURE,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  forums: null,\r\n  error: null,\r\n};\r\n\r\nconst home = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_HOME_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_HOME_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        forums: action.forums,\r\n        error: null,\r\n      };\r\n    case FETCH_HOME_FAILURE:\r\n      return {\r\n        ...initialState,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default home;\r\n","import {\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_SUCCESS,\r\n  FETCH_USERS_FAILURE,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  users: null,\r\n  error: null,\r\n};\r\n\r\nconst users = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_USERS_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        users: action.users,\r\n        error: null,\r\n      };\r\n    case FETCH_USERS_FAILURE:\r\n      return {\r\n        ...initialState,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default users;\r\n","import {\r\n  FETCH_FORUM_REQUEST,\r\n  FETCH_FORUM_SUCCESS,\r\n  FETCH_FORUM_FAILURE,\r\n  CREATE_THREAD_REQUEST,\r\n  CREATE_THREAD_SUCCESS,\r\n  CREATE_THREAD_FAILURE,\r\n  CREATE_THREAD_SAVE,\r\n  CREATE_THREAD_TOGGLE,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst forumInitialState = {\r\n  isLoading: false,\r\n  name: null,\r\n  slug: null,\r\n  description: null,\r\n  threads: null,\r\n  error: null,\r\n};\r\n\r\nconst newThreadInitialState = {\r\n  newThreadLoading: false,\r\n  newThreadSuccess: false,\r\n  newThreadName: '',\r\n  newThreadContent: '',\r\n  newThreadId: null,\r\n  newThreadError: null,\r\n  newThreadShow: false,\r\n};\r\n\r\nconst initialState = {\r\n  ...forumInitialState,\r\n  ...newThreadInitialState,\r\n};\r\n\r\nconst forum = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_FORUM_REQUEST:\r\n      return {\r\n        ...forumInitialState,\r\n        ...state,\r\n        newThreadLoading: false,\r\n        newThreadSuccess: false,\r\n        newThreadId: null,\r\n        newThreadError: null,\r\n        newThreadShow: false,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_FORUM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        name: action.name,\r\n        slug: action.slug,\r\n        description: action.description,\r\n        threads: action.threads,\r\n        error: null,\r\n      };\r\n    case FETCH_FORUM_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    case CREATE_THREAD_REQUEST:\r\n      return {\r\n        ...state,\r\n        newThreadLoading: true,\r\n        newThreadSuccess: false,\r\n        newThreadError: null,\r\n        newThreadName: action.newThread.name,\r\n        newThreadContent: action.newThread.content,\r\n      };\r\n    case CREATE_THREAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        newThreadLoading: false,\r\n        newThreadSuccess: true,\r\n        newThreadName: '',\r\n        newThreadContent: '',\r\n        newThreadId: action.newThread.id,\r\n        newThreadShow: false,\r\n        newThreadError: null,\r\n      };\r\n    case CREATE_THREAD_FAILURE:\r\n      return {\r\n        ...state,\r\n        newThreadLoading: false,\r\n        newThreadSuccess: false,\r\n        newThreadId: null,\r\n        newThreadShow: true,\r\n        newThreadError: action.error,\r\n      };\r\n    case CREATE_THREAD_SAVE:\r\n      return {\r\n        ...state,\r\n        newThreadName: action.name,\r\n        newThreadContent: action.content,\r\n      };\r\n    case CREATE_THREAD_TOGGLE:\r\n      return {\r\n        ...state,\r\n        newThreadShow: !state.newThreadShow,\r\n        newThreadSuccess: false,\r\n        newThreadError: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        ...newThreadInitialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default forum;\r\n","import {\r\n  FETCH_THREAD_REQUEST,\r\n  FETCH_THREAD_SUCCESS,\r\n  FETCH_THREAD_FAILURE,\r\n  CREATE_POST_REQUEST,\r\n  CREATE_POST_SUCCESS,\r\n  CREATE_POST_FAILURE,\r\n  DELETE_POST_REQUEST,\r\n  DELETE_POST_SUCCESS,\r\n  DELETE_POST_FAILURE,\r\n  DELETE_THREAD_REQUEST,\r\n  DELETE_THREAD_SUCCESS,\r\n  DELETE_THREAD_FAILURE,\r\n} from '../actions/types';\r\n\r\nconst threadInitialState = {\r\n  isLoading: false,\r\n  name: null,\r\n  content: null,\r\n  pinned: false,\r\n  creator: null,\r\n  createdt: null,\r\n  posts: [],\r\n  error: null,\r\n};\r\n\r\nconst newPostInitialState = {\r\n  newPostSuccess: false,\r\n  newPostLoading: false,\r\n  newPostError: null,\r\n};\r\n\r\nconst deletePostInitialState = {\r\n  deletePostList: [],\r\n};\r\n\r\nconst deleteThreadInitialState = {\r\n  isDeleting: false,\r\n  deleteError: null,\r\n};\r\n\r\nconst initialState = {\r\n  ...threadInitialState,\r\n  ...newPostInitialState,\r\n  ...deletePostInitialState,\r\n  ...deleteThreadInitialState,\r\n};\r\n\r\nconst thread = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_THREAD_REQUEST:\r\n      return {\r\n        ...initialState,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_THREAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        name: action.thread.name,\r\n        content: action.thread.content,\r\n        pinned: action.thread.pinned,\r\n        creator: action.thread.creator,\r\n        createdAt: action.thread.created_at,\r\n        posts: action.thread.posts,\r\n        error: null,\r\n      };\r\n    case FETCH_THREAD_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case DELETE_THREAD_REQUEST:\r\n      return {\r\n        ...state,\r\n        isDeleting: true,\r\n        deleteError: null,\r\n      };\r\n    case DELETE_THREAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isDeleting: false,\r\n        deleteError: null,\r\n      };\r\n    case DELETE_THREAD_FAILURE:\r\n      return {\r\n        ...state,\r\n        isDeleting: false,\r\n        deleteError: action.error,\r\n      };\r\n    case CREATE_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        newPostLoading: true,\r\n        newPostError: null,\r\n        newPostSuccess: false,\r\n      };\r\n    case CREATE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        newPostLoading: false,\r\n        newPostError: null,\r\n        newPostSuccess: true,\r\n      };\r\n    case CREATE_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        newPostLoading: false,\r\n        newPostError: action.error,\r\n        newPostSuccess: false,\r\n      };\r\n    case DELETE_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        deletePostList: [...state.deletePostList, action.id],\r\n      };\r\n    case DELETE_POST_SUCCESS:\r\n    case DELETE_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        deletePostList: state.deletePostList.filter(id => id !== action.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default thread;\r\n","import {combineReducers} from 'redux';\r\nimport auth from './auth';\r\nimport modal from './modal';\r\nimport register from './register';\r\nimport userProfile from './userprofile';\r\nimport home from './home';\r\nimport users from './users';\r\nimport forum from './forum';\r\nimport thread from './thread';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  modal,\r\n  register,\r\n  userProfile,\r\n  home,\r\n  users,\r\n  forum,\r\n  thread,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {compose, createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {persistStore, persistReducer} from 'redux-persist';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\n// Redux dev tool extension\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  stateReconciler: autoMergeLevel2,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware)),\r\n);\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './styles.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logoContainer\">\r\n      <img src={logo} className=\"logo\" alt=\"logo\" />\r\n      <div className=\"logoTitle\">RENT. RATE. SHARE.</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport Logo from '../logo';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport './styles.css';\r\n\r\nconst Navlink = () => {\r\n  return (\r\n    <div className=\"navlinkContainer\">\r\n      <Logo />\r\n      <div className=\"link\">\r\n        <Icon name=\"home\" className=\"navlinkIcon\" />\r\n        <Link to=\"/\">Home</Link>\r\n      </div>\r\n      <div className=\"link\">\r\n        <Icon name=\"users\" className=\"navlinkIcon\" />\r\n        <Link to=\"/users\">Users</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navlink;\r\n","import React, {Component} from 'react';\r\nimport Loader from '../loader';\r\nimport './styles.css';\r\n\r\nexport default class Button extends Component {\r\n  render() {\r\n    let className = this.props.className || 'btn';\r\n    let disabled = this.props.disabled;\r\n\r\n    if (this.props.loading) {\r\n      disabled = true;\r\n    }\r\n\r\n    return (\r\n      <button\r\n        className={className}\r\n        disabled={disabled}\r\n        onClick={this.props.onClick}\r\n        type={\r\n          this.props.type\r\n            ? this.props.type\r\n            : this.props.onClick\r\n              ? 'button'\r\n              : 'submit'\r\n        }>\r\n        {this.props.loading ? <Loader /> : this.props.children}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.defaultProps = {\r\n  className: 'btn',\r\n  type: 'submit',\r\n  loading: false,\r\n  disabled: false,\r\n  onClick: null,\r\n};\r\n","import React, {Component} from 'react';\r\nimport Button from '../button';\r\nimport './styles.css';\r\n\r\nclass GuestNav extends Component {\r\n  render() {\r\n    const {showLogin, showRegister} = this.props;\r\n    return (\r\n      <div className=\"guestMenu\">\r\n        <Button className=\"btn-sign-in\" type=\"button\" onClick={showLogin}>\r\n          Login\r\n        </Button>\r\n        <br />\r\n        <Button className=\"btn-register\" type=\"button\" onClick={showRegister}>\r\n          Register\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GuestNav;\r\n","import React from 'react';\r\nimport {Image} from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nconst Avatar = props => {\r\n  let {className, avatar, centered, link} = props;\r\n\r\n  avatar = avatar || 'https://i.imgur.com/7o5cwt8.png';\r\n  // Convert http to https\r\n  if (/^http/.test(avatar) && !/^https/.test(avatar)) {\r\n    avatar = avatar.replace(/^http/, 'https');\r\n  }\r\n  centered = centered !== null ? centered : true;\r\n  className = className || 'avatar';\r\n  const avatarComponent = (\r\n    <Image className={className} src={avatar} centered={centered} />\r\n  );\r\n  if (link) {\r\n    return <Link to={link}>{avatarComponent}</Link>;\r\n  }\r\n  return avatarComponent;\r\n};\r\n\r\nexport default Avatar;\r\n","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router';\r\nimport Avatar from '../avatar';\r\nimport {Menu, Dropdown} from 'semantic-ui-react';\r\nimport './styles.css';\r\n\r\nclass UserNav extends Component {\r\n  render() {\r\n    const {\r\n      username,\r\n      avatar,\r\n      logout,\r\n      showEditProfile,\r\n      history,\r\n      name,\r\n    } = this.props;\r\n\r\n    const myProfile = () => {\r\n      history.push(`/user/${username}`);\r\n    };\r\n\r\n    return (\r\n      <div className=\"userMenu\">\r\n        <Menu fluid inverted borderless size=\"large\" className=\"userMenu-menu\">\r\n          <Menu.Item disabled className=\"userMenu-avatar\">\r\n            <Avatar avatar={avatar} />\r\n          </Menu.Item>\r\n          <Dropdown item simple text={name || username} direction=\"left\">\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                onClick={myProfile}\r\n                icon=\"user\"\r\n                text=\"My profile\"\r\n              />\r\n              <Dropdown.Item\r\n                onClick={showEditProfile}\r\n                icon=\"setting\"\r\n                text=\"Edit profile\"\r\n              />\r\n              <Dropdown.Item onClick={logout} icon=\"sign out\" text=\"Logout\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(UserNav);\r\n","import React, {Component} from 'react';\r\nimport GuestNav from './guestnav';\r\nimport UserNav from './usernav';\r\n\r\nclass UserMenu extends Component {\r\n  render() {\r\n    const {\r\n      isAuthenticated,\r\n      username,\r\n      name,\r\n      avatar,\r\n      logout,\r\n      isLoading,\r\n      showRegister,\r\n      showLogin,\r\n      showEditProfile,\r\n    } = this.props;\r\n\r\n    if (isAuthenticated) {\r\n      return (\r\n        <UserNav\r\n          username={username}\r\n          name={name}\r\n          avatar={avatar}\r\n          logout={logout}\r\n          showEditProfile={showEditProfile}\r\n          isLoading={isLoading}\r\n        />\r\n      );\r\n    } else {\r\n      return <GuestNav showRegister={showRegister} showLogin={showLogin} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserMenu;\r\n","export const API_URL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? process.env.REACT_APP_PROD_API_URL\r\n    : process.env.REACT_APP_DEV_API_URL;\r\nexport const USER_URL = API_URL + 'user/';\r\nexport const USER_REGISTER_URL = USER_URL + 'register/';\r\nexport const USER_LOGIN_URL = USER_URL + 'login/';\r\nexport const USER_LOGOUT_URL = USER_URL + 'logout/';\r\nexport const USER_EDIT_URL = '/edit/';\r\nexport const USER_DELETE_URL = '/delete/';\r\nexport const FORUM_URL = API_URL + 'forum/';\r\nexport const FORUM_CREATE_URL = FORUM_URL + 'create/';\r\nexport const FORUM_EDIT_URL = '/edit/';\r\nexport const FORUM_DELETE_URL = '/delete/';\r\nexport const THREAD_URL = API_URL + 'thread/';\r\nexport const THREAD_CREATE_URL = THREAD_URL + 'create/';\r\nexport const THREAD_EDIT_URL = '/edit/';\r\nexport const THREAD_DELETE_URL = '/delete/';\r\nexport const POST_URL = API_URL + 'post/';\r\nexport const POST_CREATE_URL = POST_URL + 'create/';\r\nexport const POST_EDIT_URL = '/edit/';\r\nexport const POST_DELETE_URL = '/delete/';\r\n","import store from '../store';\r\n\r\nexport const getConfig = () => {\r\n  const isAuthenticated = store.getState().auth.isAuthenticated;\r\n  if (isAuthenticated) {\r\n    const token = store.getState().auth.token;\r\n    const config = {\r\n      headers: {Authorization: 'Token ' + token},\r\n    };\r\n    return config;\r\n  }\r\n  return null;\r\n};\r\n","import axios from 'axios';\r\nimport {FORUM_URL} from './constants';\r\nimport {getConfig} from '../utils/config';\r\n\r\nexport const fetchForumsApi = () => {\r\n  return axios.get(FORUM_URL, getConfig());\r\n};\r\n\r\nexport const fetchForumApi = forum => {\r\n  return axios.get(FORUM_URL + forum, getConfig());\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  THREAD_URL,\r\n  THREAD_CREATE_URL,\r\n  THREAD_EDIT_URL,\r\n  THREAD_DELETE_URL,\r\n} from './constants';\r\nimport {getConfig} from '../utils/config';\r\n\r\nexport const fetchThreadApi = thread => {\r\n  return axios.get(THREAD_URL + thread, getConfig());\r\n};\r\n\r\nexport const createThreadApi = newThread => {\r\n  return axios.post(THREAD_CREATE_URL, newThread, getConfig());\r\n};\r\n\r\nexport const deleteThreadApi = id => {\r\n  return axios.delete(THREAD_URL + id + THREAD_DELETE_URL, getConfig());\r\n};\r\n\r\nexport const editThreadApi = (id, data) => {\r\n  return axios.put(THREAD_URL + id + THREAD_EDIT_URL, data, getConfig());\r\n};\r\n","import axios from 'axios';\r\nconst CLOUDINARY_UPLOAD_TRANSFORM_PRESET = 'dfnrvqvx'; // img transformed to 200x200\r\nconst CLOUDINARY_UPLOAD_PRESET = 'nlczu2np';\r\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/rengorum/upload';\r\n\r\nexport const imageUploadApi = (file, transform = true) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  const upload_preset = transform\r\n    ? CLOUDINARY_UPLOAD_TRANSFORM_PRESET\r\n    : CLOUDINARY_UPLOAD_PRESET;\r\n  formData.append('upload_preset', upload_preset);\r\n  return axios.post(CLOUDINARY_UPLOAD_URL, formData, null);\r\n};\r\n","import {SHOW_MODAL, HIDE_MODAL} from './types';\r\n\r\nexport const showModal = (modalType, modalProps) => ({\r\n  type: SHOW_MODAL,\r\n  modalType,\r\n  modalProps,\r\n});\r\n\r\nexport const hideModal = () => ({\r\n  type: HIDE_MODAL,\r\n});\r\n","export const apiErrorHandler = error => {\r\n  try {\r\n    if (!error.response) {\r\n      return 'Error: Network Error';\r\n    } else if (error.response.data) {\r\n      const erd = error.response.data;\r\n      if (erd.detail) {\r\n        if (erd.detail === 'Invalid token.') {\r\n          return 'Invalid Token. Please re-login.';\r\n        }\r\n        return erd.detail;\r\n      }\r\n      if (erd[0]) return erd[0];\r\n      const key = Object.keys(erd)[0];\r\n      const errorString = erd[key][0];\r\n      if (['non_field_errors', 'detail'].indexOf(key) >= 0) {\r\n        return errorString;\r\n      }\r\n      const errorField = String(key).replace('_', ' ');\r\n      return (\r\n        errorField.charAt(0).toUpperCase() +\r\n        errorField.substring(1) +\r\n        ': ' +\r\n        errorString\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return 'Something wrong happened. Please report this.';\r\n  }\r\n};\r\n","import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGIN_RESET,\r\n  EDIT_PROFILE_REQUEST,\r\n  EDIT_PROFILE_SUCCESS,\r\n  EDIT_PROFILE_FAILURE,\r\n  EDIT_PROFILE_RESET,\r\n  LOGOUT,\r\n} from './types';\r\nimport {loginApi, logoutApi, editProfileApi} from '../api';\r\nimport store from '../store';\r\nimport {hideModal} from './modal';\r\nimport {apiErrorHandler} from '../utils/errorhandler';\r\n\r\nexport const login = (username, password) => dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  loginApi(username, password)\r\n    .then(response => {\r\n      dispatch(loginSuccess(response.data));\r\n      dispatch(hideModal());\r\n    })\r\n    .catch(error => {\r\n      const errorMessage = apiErrorHandler(error);\r\n      dispatch(loginFailure(errorMessage));\r\n    });\r\n};\r\n\r\nexport const loginRequest = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nexport const loginSuccess = data => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    token: data.token,\r\n    username: data.username,\r\n    name: data.name,\r\n    avatar: data.avatar,\r\n    isStaff: data.is_staff,\r\n  };\r\n};\r\n\r\nexport const loginFailure = error => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  logoutApi();\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\nexport const loginReset = () => {\r\n  return {\r\n    type: LOGIN_RESET,\r\n  };\r\n};\r\n\r\nexport const editProfile = newProfile => dispatch => {\r\n  dispatch(editProfileRequest());\r\n\r\n  const username = store.getState().auth.username;\r\n  if (!username) {\r\n    dispatch(editProfileFailure('Not authenticated'));\r\n  } else {\r\n    editProfileApi(username, newProfile)\r\n      .then(response => {\r\n        dispatch(editProfileSuccess(newProfile));\r\n      })\r\n      .catch(error => {\r\n        const errorMessage = apiErrorHandler(error);\r\n        dispatch(editProfileFailure(errorMessage));\r\n      });\r\n  }\r\n};\r\n\r\nexport const editProfileRequest = () => {\r\n  return {\r\n    type: EDIT_PROFILE_REQUEST,\r\n  };\r\n};\r\n\r\nexport const editProfileSuccess = newProfile => {\r\n  return {\r\n    type: EDIT_PROFILE_SUCCESS,\r\n    avatar: newProfile.avatar,\r\n    name: newProfile.name,\r\n  };\r\n};\r\n\r\nexport const editProfileFailure = error => {\r\n  return {\r\n    type: EDIT_PROFILE_FAILURE,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const editProfileReset = () => {\r\n  return {\r\n    type: EDIT_PROFILE_RESET,\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  USER_LOGIN_URL,\r\n  USER_LOGOUT_URL,\r\n  USER_REGISTER_URL,\r\n  USER_EDIT_URL,\r\n  USER_URL,\r\n} from './constants';\r\nimport {getConfig} from '../utils/config';\r\n\r\nexport const loginApi = (username, password) => {\r\n  return axios.post(USER_LOGIN_URL, {username, password}, getConfig());\r\n};\r\n\r\nexport const logoutApi = () => {\r\n  return axios.post(USER_LOGOUT_URL, null, getConfig());\r\n};\r\n\r\nexport const registerApi = data => {\r\n  return axios.post(USER_REGISTER_URL, data, getConfig());\r\n};\r\n\r\nexport const fetchUserProfileApi = username => {\r\n  return axios.get(USER_URL + username, getConfig());\r\n};\r\n\r\nexport const editProfileApi = (username, newProfile) => {\r\n  return axios.put(\r\n    USER_URL + username + USER_EDIT_URL,\r\n    newProfile,\r\n    getConfig(),\r\n  );\r\n};\r\n\r\nexport const fetchUsersApi = () => {\r\n  return axios.get(USER_URL, getConfig());\r\n};\r\n","import {\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILURE,\r\n  REGISTER_RESET,\r\n} from './types';\r\nimport {registerApi} from '../api';\r\nimport {apiErrorHandler} from '../utils/errorhandler';\r\nimport {login} from './auth';\r\n\r\nexport const register = data => dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  registerApi(data)\r\n    .then(response => {\r\n      dispatch(registerSuccess());\r\n      dispatch(login(data.username, data.password));\r\n    })\r\n    .catch(error => {\r\n      const errorMessage = apiErrorHandler(error);\r\n      dispatch(registerFailure(errorMessage));\r\n    });\r\n};\r\n\r\nexport const registerRequest = () => {\r\n  return {\r\n    type: REGISTER_REQUEST,\r\n  };\r\n};\r\n\r\nexport const registerSuccess = () => {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const registerFailure = error => {\r\n  return {\r\n    type: REGISTER_FAILURE,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const registerReset = () => {\r\n  return {\r\n    type: REGISTER_RESET,\r\n  };\r\n};\r\n","import {\r\n  FETCH_USER_PROFILE_REQUEST,\r\n  FETCH_USER_PROFILE_SUCCESS,\r\n  FETCH_USER_PROFILE_FAILURE,\r\n} from './types';\r\nimport {fetchUserProfileApi} from '../api';\r\nimport {apiErrorHandler} from '../utils/errorhandler';\r\n\r\nexport const fetchUserProfile = username => dispatch => {\r\n  dispatch(fetchUserProfileRequest());\r\n\r\n  fetchUserProfileApi(username)\r\n    .then(response => {\r\n      dispatch(fetchUserProfileSuccess(response.data));\r\n    })\r\n    .catch(error => {\r\n      const errorMessage = apiErrorHandler(error);\r\n      dispatch(fetchUserProfileFailure(errorMessage));\r\n    });\r\n};\r\n\r\nexport const fetchUserProfileRequest = () => {\r\n  return {\r\n    type: FETCH_USER_PROFILE_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchUserProfileSuccess = data => {\r\n  return {\r\n    type: FETCH_USER_PROFILE_SUCCESS,\r\n    profile: data,\r\n  };\r\n};\r\n\r\nexport const fetchUserProfileFailure = error => {\r\n  return {\r\n    type: FETCH_USER_PROFILE_FAILURE,\r\n    error,\r\n  };\r\n};\r\n","import {\r\n  FETCH_HOME_REQUEST,\r\n  FETCH_HOME_SUCCESS,\r\n  FETCH_HOME_FAILURE,\r\n} from './types';\r\nimport {fetchForumsApi} from '../api';\r\nimport {apiErrorHandler} from '../utils/errorhandler';\r\n\r\nexport const fetchForums = () => dispatch => {\r\n  dispatch(fetchHomeRequest());\r\n\r\n  fetchForumsApi()\r\n    .then(response => {\r\n      dispatch(fetchHomeSuccess(response.data));\r\n    })\r\n    .catch(error => {\r\n      const errorMessage = apiErrorHandler(error);\r\n      dispatch(fetchHomeFailure(errorMessage));\r\n    });\r\n};\r\n\r\nexport const fetchHomeRequest = () => {\r\n  return {\r\n    type: FETCH_HOME_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchHomeSuccess = data => {\r\n  return {\r\n    type: FETCH_HOME_SUCCESS,\r\n    forums: data,\r\n  };\r\n};\r\n\r\nexport const fetchHomeFailure = error => {\r\n  return {\r\n    type: FETCH_HOME_FAILURE,\r\n    error,\r\n  };\r\n};\r\n","import {\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_SUCCESS,\r\n  FETCH_USERS_FAILURE,\r\n} from './types';\r\nimport {fetchUsersApi} from '../api';\r\nimport {apiErrorHandler} from '../utils/errorhandler';\r\n\r\nexport const fetchUsers = () => dispatch => {\r\n  dispatch(fetchUsersRequest());\r\n\r\n  fetchUsersApi()\r\n    .then(response => {\r\n      dispatch(fetchUsersSuccess(response.data));\r\n    })\r\n    .catch(error => {\r\n      const errorMessage = apiErrorHandler(error);\r\n      dispatch(fetchUsersFailure(errorMessage));\r\n    });\r\n};\r\n\r\nexport const fetchUsersRequest = () => {\r\n  return {\r\n    type: FETCH_USERS_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchUsersSuccess = data => {\r\n  return {\r\n    type: FETCH_USERS_SUCCESS,\r\n    users: data,\r\n  };\r\n};\r\n\r\nexport const fetchUsersFailure = error => {\r\n  return {\r\n    type: FETCH_USERS_FAILURE,\r\n    error,\r\n  };\r\n};\r\n","import {\r\n  FETCH_FORUM_REQUEST,\r\n  FETCH_FORUM_SUCCESS,\r\n  FETCH_FORUM_FAILURE,\r\n} from './types';\r\nimport {fetchForumApi} from '../api';\r\nimport {apiErrorHandler} from '../utils/errorhandler';\r\n\r\nexport const fetchForum = forum => dispatch => {\r\n  dispatch(fetchForumRequest());\r\n\r\n  fetchForumApi(forum)\r\n    .then(response => {\r\n      dispatch(fetchForumSuccess(response.data));\r\n    })\r\n    .catch(error => {\r\n      const errorMessage = apiErrorHandler(error);\r\n      dispatch(fetchForumFailure(errorMessage));\r\n    });\r\n};\r\n\r\nexport const fetchForumRequest = () => {\r\n  return {\r\n    type: FETCH_FORUM_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchForumSuccess = forum => {\r\n  return {\r\n    type: FETCH_FORUM_SUCCESS,\r\n    name: forum.name,\r\n    slug: forum.slug,\r\n    description: forum.description,\r\n    threads: forum.threads,\r\n  };\r\n};\r\n\r\nexport const fetchForumFailure = error => {\r\n  return {\r\n    type: FETCH_FORUM_FAILURE,\r\n    error,\r\n  };\r\n};\r\n","import {\r\n  FETCH_THREAD_REQUEST,\r\n  FETCH_THREAD_SUCCESS,\r\n  FETCH_THREAD_FAILURE,\r\n  CREATE_THREAD_REQUEST,\r\n  CREATE_THREAD_SUCCESS,\r\n  CREATE_THREAD_FAILURE,\r\n  CREATE_THREAD_SAVE,\r\n  CREATE_THREAD_TOGGLE,\r\n  DELETE_THREAD_REQUEST,\r\n  DELETE_THREAD_SUCCESS,\r\n  DELETE_THREAD_FAILURE,\r\n} from './types';\r\nimport {\r\n  fetchThreadApi,\r\n  createThreadApi,\r\n  fetchForumApi,\r\n  deleteThreadApi,\r\n} from '../api';\r\nimport {fetchForumSuccess, fetchForumFailure} from './forum';\r\nimport {apiErrorHandler} from '../utils/errorhandler';\r\n\r\nexport const fetchThread = thread => dispatch => {\r\n  dispatch(fetchThreadRequest());\r\n\r\n  fetchThreadApi(thread)\r\n    .then(response => {\r\n      dispatch(fetchThreadSuccess(response.data));\r\n    })\r\n    .catch(error => {\r\n      const errorMessage = apiErrorHandler(error);\r\n      dispatch(fetchThreadFailure(errorMessage));\r\n    });\r\n};\r\n\r\nexport const fetchThreadRequest = () => {\r\n  return {\r\n    type: FETCH_THREAD_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchThreadSuccess = thread => {\r\n  return {\r\n    type: FETCH_THREAD_SUCCESS,\r\n    thread,\r\n  };\r\n};\r\n\r\nexport const fetchThreadFailure = error => {\r\n  return {\r\n    type: FETCH_THREAD_FAILURE,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const createThread = newThread => dispatch => {\r\n  dispatch(createThreadRequest(newThread));\r\n\r\n  createThreadApi(newThread)\r\n    .then(response => {\r\n      dispatch(createThreadSuccess(response.data));\r\n\r\n      // re-load forum page\r\n      fetchForumApi(newThread.forum)\r\n        .then(response => {\r\n          dispatch(fetchForumSuccess(response.data));\r\n        })\r\n        .catch(error => {\r\n          const errorMessage = apiErrorHandler(error);\r\n          dispatch(fetchForumFailure(errorMessage));\r\n        });\r\n    })\r\n    .catch(error => {\r\n      const errorMessage = apiErrorHandler(error);\r\n      dispatch(createThreadFailure(errorMessage));\r\n    });\r\n};\r\n\r\nexport const createThreadRequest = newThread => {\r\n  return {\r\n    type: CREATE_THREAD_REQUEST,\r\n    newThread,\r\n  };\r\n};\r\n\r\nexport const createThreadSuccess = newThread => {\r\n  return {\r\n    type: CREATE_THREAD_SUCCESS,\r\n    newThread,\r\n  };\r\n};\r\n\r\nexport const createThreadFailure = error => {\r\n  return {\r\n    type: CREATE_THREAD_FAILURE,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const createThreadSave = newThread => {\r\n  return {\r\n    type: CREATE_THREAD_SAVE,\r\n    name: newThread.name,\r\n    content: newThread.content,\r\n  };\r\n};\r\n\r\nexport const createThreadToggle = () => {\r\n  return {\r\n    type: CREATE_THREAD_TOGGLE,\r\n  };\r\n};\r\n\r\nexport const deleteThread = id => dispatch => {\r\n  dispatch(deleteThreadRequest());\r\n\r\n  deleteThreadApi(id)\r\n    .then(response => {\r\n      dispatch(deleteThreadSuccess());\r\n\r\n      // re-load thread page\r\n      fetchThreadApi(id)\r\n        .then(response => {\r\n          dispatch(fetchThreadSuccess(response.data));\r\n        })\r\n        .catch(error => {\r\n          const errorMessage = apiErrorHandler(error);\r\n          dispatch(fetchThreadFailure(errorMessage));\r\n        });\r\n    })\r\n    .catch(error => {\r\n      const errorMessage = apiErrorHandler(error);\r\n      dispatch(deleteThreadFailure(errorMessage));\r\n    });\r\n};\r\n\r\nexport const deleteThreadRequest = () => {\r\n  return {\r\n    type: DELETE_THREAD_REQUEST,\r\n  };\r\n};\r\n\r\nexport const deleteThreadSuccess = () => {\r\n  return {\r\n    type: DELETE_THREAD_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const deleteThreadFailure = error => {\r\n  return {\r\n    type: DELETE_THREAD_FAILURE,\r\n    error,\r\n  };\r\n};\r\n","import {\r\n  CREATE_POST_REQUEST,\r\n  CREATE_POST_SUCCESS,\r\n  CREATE_POST_FAILURE,\r\n  DELETE_POST_REQUEST,\r\n  DELETE_POST_SUCCESS,\r\n  DELETE_POST_FAILURE,\r\n} from './types';\r\nimport {createPostApi, fetchThreadApi, deletePostApi} from '../api';\r\nimport {fetchThreadSuccess, fetchThreadFailure} from './thread';\r\nimport {apiErrorHandler} from '../utils/errorhandler';\r\n\r\nexport const createPost = newPost => dispatch => {\r\n  dispatch(createPostRequest());\r\n\r\n  createPostApi(newPost)\r\n    .then(response => {\r\n      dispatch(createPostSuccess());\r\n\r\n      // re-load thread page\r\n      fetchThreadApi(newPost.thread_id)\r\n        .then(response => {\r\n          dispatch(fetchThreadSuccess(response.data));\r\n        })\r\n        .catch(error => {\r\n          const errorMessage = apiErrorHandler(error);\r\n          dispatch(fetchThreadFailure(errorMessage));\r\n        });\r\n    })\r\n    .catch(error => {\r\n      const errorMessage = apiErrorHandler(error);\r\n      dispatch(createPostFailure(errorMessage));\r\n    });\r\n};\r\n\r\nexport const createPostRequest = newPost => {\r\n  return {\r\n    type: CREATE_POST_REQUEST,\r\n  };\r\n};\r\n\r\nexport const createPostSuccess = () => {\r\n  return {\r\n    type: CREATE_POST_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const createPostFailure = error => {\r\n  return {\r\n    type: CREATE_POST_FAILURE,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const deletePost = (id, threadID) => dispatch => {\r\n  dispatch(deletePostRequest(id));\r\n\r\n  deletePostApi(id)\r\n    .then(response => {\r\n      dispatch(deletePostSuccess(id));\r\n\r\n      // re-load thread page\r\n      fetchThreadApi(threadID)\r\n        .then(response => {\r\n          dispatch(fetchThreadSuccess(response.data));\r\n        })\r\n        .catch(error => {\r\n          const errorMessage = apiErrorHandler(error);\r\n          dispatch(fetchThreadFailure(errorMessage));\r\n        });\r\n    })\r\n    .catch(error => {\r\n      const errorMessage = apiErrorHandler(error);\r\n      dispatch(deletePostFailure(id, errorMessage));\r\n    });\r\n};\r\n\r\nexport const deletePostRequest = id => {\r\n  return {\r\n    type: DELETE_POST_REQUEST,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const deletePostSuccess = id => {\r\n  return {\r\n    type: DELETE_POST_SUCCESS,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const deletePostFailure = (id, error) => {\r\n  return {\r\n    type: DELETE_POST_FAILURE,\r\n    id,\r\n    error,\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  POST_URL,\r\n  POST_DELETE_URL,\r\n  POST_CREATE_URL,\r\n  POST_EDIT_URL,\r\n} from './constants';\r\nimport {getConfig} from '../utils/config';\r\n\r\nexport const createPostApi = newPost => {\r\n  return axios.post(POST_CREATE_URL, newPost, getConfig());\r\n};\r\n\r\nexport const deletePostApi = id => {\r\n  return axios.delete(POST_URL + id + POST_DELETE_URL, getConfig());\r\n};\r\n\r\nexport const editPostApi = (id, content) => {\r\n  return axios.put(\r\n    POST_URL + id + POST_EDIT_URL,\r\n    {content: content},\r\n    getConfig(),\r\n  );\r\n};\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Navlink from '../../components/navlink';\r\nimport UserMenu from '../../components/usermenu';\r\nimport './styles.css';\r\nimport {showModal, logout} from '../../actions';\r\n\r\nclass HeaderContainer extends Component {\r\n  render() {\r\n    const {\r\n      isAuthenticated,\r\n      username,\r\n      name,\r\n      avatar,\r\n      handleLogout,\r\n      isLoading,\r\n      showRegister,\r\n      showLogin,\r\n      showEditProfile,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"headerContainer\">\r\n        <Navlink />\r\n        <UserMenu\r\n          isAuthenticated={isAuthenticated}\r\n          username={username}\r\n          name={name}\r\n          avatar={avatar}\r\n          logout={handleLogout}\r\n          isLoading={isLoading}\r\n          showRegister={showRegister}\r\n          showLogin={showLogin}\r\n          showEditProfile={showEditProfile}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  username: state.auth.username,\r\n  name: state.auth.name,\r\n  avatar: state.auth.avatar,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  isLoading: state.auth.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleLogout: () => {\r\n    dispatch(logout());\r\n  },\r\n  showRegister: () => {\r\n    dispatch(showModal('REGISTER', {}));\r\n  },\r\n  showLogin: () => {\r\n    dispatch(showModal('LOGIN', {}));\r\n  },\r\n  showEditProfile: () => {\r\n    dispatch(showModal('EDIT_PROFILE', {}));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(HeaderContainer);\r\n","import React, {Component} from 'react';\r\nimport {Icon, Message} from 'semantic-ui-react';\r\nimport Loader from '../loader';\r\nimport './styles.css';\r\n\r\nexport default class StatusMessage extends Component {\r\n  render() {\r\n    const {\r\n      loading,\r\n      loadingClassName,\r\n      loadingMessage,\r\n      error,\r\n      errorClassName,\r\n      errorMessage,\r\n      success,\r\n      successClassName,\r\n      successMessage,\r\n      nothing,\r\n      nothingClassName,\r\n      nothingMessage,\r\n      type,\r\n    } = this.props;\r\n\r\n    if (loading) {\r\n      if (type === 'modal') {\r\n        return (\r\n          <div className={loadingClassName || 'statusMessage-modal'}>\r\n            <Message attached icon>\r\n              <Message.Content>\r\n                <Icon name=\"circle notched\" loading size=\"big\" />\r\n                {loadingMessage || 'Loading ...'}\r\n              </Message.Content>\r\n            </Message>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className={loadingClassName || 'statusMessage-default'}>\r\n          <Loader />\r\n          <br />\r\n          <Message size=\"tiny\">\r\n            <Message.Content>\r\n              <Message.Header>Just few seconds</Message.Header>\r\n              {loadingMessage || 'We are fetching the content for you.'}\r\n            </Message.Content>\r\n          </Message>\r\n        </div>\r\n      );\r\n    } else if (error) {\r\n      if (type === 'modal') {\r\n        return (\r\n          <div className={errorClassName || 'statusMessage-modal'}>\r\n            <Message attached error icon>\r\n              <Message.Content>\r\n                <Icon name=\"thumbs outline down\" size=\"big\" />\r\n                {errorMessage || error || 'Sorry, something went wrong'}\r\n              </Message.Content>\r\n            </Message>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className={errorClassName || 'statusMessage-default'}>\r\n          <Message error>\r\n            <Message.Content>\r\n              <Icon name=\"thumbs outline down\" size=\"big\" />\r\n              {errorMessage || error || 'Sorry, something went wrong'}\r\n            </Message.Content>\r\n          </Message>\r\n        </div>\r\n      );\r\n    } else if (success) {\r\n      if (type === 'modal') {\r\n        return (\r\n          <div className={successClassName || 'statusMessage-modal'}>\r\n            <Message attached positive icon>\r\n              <Message.Content>\r\n                <Icon name=\"thumbs outline up\" size=\"big\" />\r\n                {successMessage || 'Successful'}\r\n              </Message.Content>\r\n            </Message>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className={successClassName || 'statusMessage-default'}>\r\n          <Message positive>\r\n            <Message.Content>\r\n              <Icon name=\"thumbs outline up\" size=\"big\" />\r\n              {successMessage || 'Successful'}\r\n            </Message.Content>\r\n          </Message>\r\n        </div>\r\n      );\r\n    } else if (nothing) {\r\n      if (type === 'modal') {\r\n        return (\r\n          <div className={nothingClassName || 'statusMessage-modal'}>\r\n            <Message attached error icon>\r\n              <Message.Content>\r\n                <Icon name=\"thumbs outline down\" size=\"big\" />\r\n                {nothingMessage || 'Successful'}\r\n              </Message.Content>\r\n            </Message>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className={nothingClassName || 'statusMessage-default'}>\r\n          <Message error>\r\n            <Message.Content>\r\n              <Icon name=\"thumbs outline down\" size=\"big\" />\r\n              {nothingMessage || 'Nothing to display'}\r\n            </Message.Content>\r\n          </Message>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Form, Icon, Message, Button} from 'semantic-ui-react';\r\nimport StatusMessage from '../../components/statusmessage';\r\nimport './styles.css';\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      checked: true,\r\n    };\r\n  }\r\n\r\n  handleChange = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  handleCheckbox = () => {\r\n    this.setState({checked: !this.state.checked});\r\n  };\r\n\r\n  isFormValid = () => {\r\n    const {username, name, email, password, checked} = this.state;\r\n\r\n    let isFormValid = true;\r\n    if (!username || !name || !email || !password || !checked) {\r\n      isFormValid = false;\r\n    }\r\n    return isFormValid;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    if (this.isFormValid()) {\r\n      let data = {\r\n        username: this.state.username,\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      };\r\n      this.props.handleRegister(data);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {isLoading, error, showLogin} = this.props;\r\n\r\n    const statusMessage = (\r\n      <StatusMessage\r\n        error={error}\r\n        errorMessage={error || 'Login Error'}\r\n        loading={isLoading}\r\n        loadingMessage={'Registering your account'}\r\n        type=\"modal\"\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Message\r\n          attached\r\n          header=\"Welcome to our site!\"\r\n          content=\"Fill out the form below to sign-up for a new account\"\r\n        />\r\n        {statusMessage}\r\n        <Form className=\"attached fluid segment\">\r\n          <Form.Input\r\n            required\r\n            label=\"Username\"\r\n            placeholder=\"Username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Input\r\n            required\r\n            label=\"Name\"\r\n            placeholder=\"Name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Input\r\n            required\r\n            label=\"Email\"\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Input\r\n            required\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Checkbox\r\n            inline\r\n            required\r\n            label=\"I agree to the terms and conditions\"\r\n            name=\"agreement\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckbox}\r\n          />\r\n          <Button\r\n            color=\"blue\"\r\n            loading={isLoading}\r\n            disabled={isLoading}\r\n            onClick={this.handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <Message attached=\"bottom\" warning>\r\n          <Icon name=\"help\" />\r\n          Already signed up?&nbsp;\r\n          {/* eslint-disable-next-line */}\r\n          <a className=\"register-login\" onClick={showLogin}>\r\n            Login here\r\n          </a>\r\n          &nbsp;instead.\r\n        </Message>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Icon} from 'semantic-ui-react';\r\nimport './styles.css';\r\n\r\nexport default class Modal extends Component {\r\n  listenKeyboard = event => {\r\n    if (event.key === 'Escape' || event.keyCode === 27) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.onClose) {\r\n      window.addEventListener('keydown', this.listenKeyboard, true);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.onClose) {\r\n      window.removeEventListener('keydown', this.listenKeyboard, true);\r\n    }\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  onDialogClick = event => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n    const overlayStyle = this.props.overlayStyle ? this.props.overlayStyle : {};\r\n    const contentStyle = this.props.contentStyle ? this.props.contentStyle : {};\r\n    const dialogStyle = this.props.dialogStyle ? this.props.dialogStyle : {};\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"modal-overlay-div\" style={overlayStyle} />\r\n        <div\r\n          className=\"modal-content-div\"\r\n          style={contentStyle}\r\n          onClick={this.closeModal}>\r\n          <div\r\n            className=\"modal-dialog-div\"\r\n            style={dialogStyle}\r\n            onClick={this.onDialogClick}>\r\n            <Icon\r\n              name=\"window close outline\"\r\n              size=\"large\"\r\n              className=\"modal-close-div\"\r\n              onClick={this.closeModal}\r\n            />\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Register from '../../components/register';\r\nimport Modal from '../../components/modal';\r\nimport {hideModal, registerReset, showModal, register} from '../../actions';\r\n\r\nclass RegisterModal extends Component {\r\n  componentWillMount() {\r\n    if (this.props.isAuthenticated) {\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isAuthenticated,\r\n      isLoading,\r\n      error,\r\n      handleRegister,\r\n      showLogin,\r\n      handleClose,\r\n    } = this.props;\r\n\r\n    return isAuthenticated ? null : (\r\n      <Modal onClose={handleClose}>\r\n        <Register\r\n          handleRegister={handleRegister}\r\n          showLogin={showLogin}\r\n          isLoading={isLoading}\r\n          error={error}\r\n        />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.register.error,\r\n  isLoading: state.register.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleRegister: data => {\r\n    dispatch(register(data));\r\n  },\r\n  handleClose: () => {\r\n    dispatch(hideModal());\r\n    dispatch(registerReset());\r\n  },\r\n  showLogin: () => {\r\n    dispatch(showModal('LOGIN', {}));\r\n    dispatch(registerReset());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(RegisterModal);\r\n","import React, {Component} from 'react';\r\nimport {Form, Icon, Message, Button} from 'semantic-ui-react';\r\nimport StatusMessage from '../../components/statusmessage';\r\nimport './styles.css';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  handleChange = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  isFormValid = () => {\r\n    const {username, password} = this.state;\r\n\r\n    let isFormValid = true;\r\n    if (!username || !password) {\r\n      isFormValid = false;\r\n    }\r\n    return isFormValid;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    if (this.isFormValid()) {\r\n      this.props.handleLogin(this.state.username, this.state.password);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {isLoading, error, showRegister} = this.props;\r\n\r\n    const statusMessage = (\r\n      <StatusMessage\r\n        error={error}\r\n        errorMessage={error || 'Login Error'}\r\n        loading={isLoading}\r\n        loadingMessage={'Signing in'}\r\n        type=\"modal\"\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Message attached header=\"Login\" />\r\n        {statusMessage}\r\n        <Form className=\"attached fluid segment\">\r\n          <Form.Input\r\n            required\r\n            label=\"Username\"\r\n            placeholder=\"Username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Input\r\n            required\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Button\r\n            color=\"blue\"\r\n            loading={isLoading}\r\n            disabled={isLoading}\r\n            onClick={this.handleSubmit}>\r\n            Login\r\n          </Button>\r\n        </Form>\r\n        <Message attached=\"bottom\" warning>\r\n          <Icon name=\"help\" />\r\n          New to this site?&nbsp;\r\n          {/* eslint-disable-next-line */}\r\n          <a className=\"login-register\" onClick={showRegister}>\r\n            Register here\r\n          </a>\r\n          &nbsp;instead.\r\n        </Message>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Login from '../../components/login';\r\nimport Modal from '../../components/modal';\r\nimport {hideModal, loginReset, showModal, login} from '../../actions';\r\n\r\nclass LoginModal extends Component {\r\n  componentWillMount() {\r\n    if (this.props.isAuthenticated) {\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isAuthenticated,\r\n      isLoading,\r\n      error,\r\n      handleClose,\r\n      showRegister,\r\n      handleLogin,\r\n    } = this.props;\r\n\r\n    return isAuthenticated ? null : (\r\n      <Modal onClose={handleClose}>\r\n        <Login\r\n          handleLogin={handleLogin}\r\n          showRegister={showRegister}\r\n          isLoading={isLoading}\r\n          error={error}\r\n        />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.auth.isLoading,\r\n  error: state.auth.error,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleLogin: (username, password) => {\r\n    dispatch(login(username, password));\r\n  },\r\n  handleClose: () => {\r\n    dispatch(hideModal());\r\n    dispatch(loginReset());\r\n  },\r\n  showRegister: () => {\r\n    dispatch(showModal('REGISTER', {}));\r\n    dispatch(loginReset());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(LoginModal);\r\n","import React, {Component} from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport {Form, Image, Message, Button, TextArea, Grid} from 'semantic-ui-react';\r\nimport {imageUploadApi} from '../../api/image';\r\nimport StatusMessage from '../../components/statusmessage';\r\nimport './styles.css';\r\n\r\nexport default class EditProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {name, avatar} = this.props;\r\n\r\n    this.state = {\r\n      name: name,\r\n      newPassword: '',\r\n      currentPassword: '',\r\n      bio: '',\r\n      status: '',\r\n      avatar: avatar,\r\n      avatarFile: null,\r\n      avatarError: null,\r\n      avatarUploading: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  onImageDrop = files => {\r\n    this.setState({\r\n      avatarFile: files[0],\r\n    });\r\n  };\r\n\r\n  editProfile = () => {\r\n    let newProfile = {\r\n      name: this.state.name,\r\n      current_password: this.state.currentPassword,\r\n      new_password: this.state.newPassword,\r\n      bio: this.state.bio,\r\n      avatar: this.state.avatar,\r\n      status: this.state.status,\r\n    };\r\n    this.props.handleEdit(newProfile);\r\n\r\n    // prevent spamming so user have to keep entering password for every edit submission\r\n    this.setState({\r\n      currentPassword: '',\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const {currentPassword, avatarFile} = this.state;\r\n\r\n    if (currentPassword !== '') {\r\n      if (!avatarFile) {\r\n        // no new avatar\r\n        this.editProfile();\r\n      } else {\r\n        this.setState({\r\n          avatarUploading: true,\r\n        });\r\n\r\n        imageUploadApi(avatarFile)\r\n          .then(response => {\r\n            this.setState({\r\n              avatar: response.data.secure_url,\r\n              avatarUploading: false,\r\n            });\r\n            this.editProfile();\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            this.setState({\r\n              avatarError: 'Image Upload Error',\r\n              avatarFile: null,\r\n              avatarUploading: false,\r\n            });\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {isLoading, error, success} = this.props;\r\n\r\n    let {\r\n      name,\r\n      newPassword,\r\n      currentPassword,\r\n      bio,\r\n      status,\r\n      avatar,\r\n      avatarFile,\r\n      avatarError,\r\n      avatarUploading,\r\n    } = this.state;\r\n\r\n    const statusMessage = (\r\n      <StatusMessage\r\n        error={error || avatarError}\r\n        errorMessage={error || avatarError}\r\n        loading={isLoading || avatarUploading}\r\n        loadingMessage={'Editing your profile'}\r\n        success={success}\r\n        successMessage={'Your profile edit was successful'}\r\n        type=\"modal\"\r\n      />\r\n    );\r\n    const avatarURL = avatarFile ? avatarFile.preview : avatar;\r\n\r\n    return (\r\n      <div>\r\n        <Message\r\n          attached\r\n          header=\"Edit Your Profile\"\r\n          content=\"Fill out any part of the form below to edit your profile\"\r\n        />\r\n        {statusMessage}\r\n        <Form className=\"attached segment\">\r\n          <Grid celled columns={2}>\r\n            <Grid.Column>\r\n              <Form.Field>\r\n                <label>Profile picture</label>\r\n                <Dropzone\r\n                  onDrop={this.onImageDrop}\r\n                  multiple={false}\r\n                  accept=\"image/*\">\r\n                  <Image src={avatarURL} className=\"editProfile-avatar\" />\r\n                </Dropzone>\r\n              </Form.Field>\r\n              <Form.Input\r\n                label=\"Bio\"\r\n                placeholder=\"Describe yourself\"\r\n                type=\"text\"\r\n                name=\"bio\"\r\n                control={TextArea}\r\n                value={bio}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Form.Input\r\n                label=\"Name\"\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={this.handleChange}\r\n              />\r\n              <Form.Input\r\n                required\r\n                label=\"Current Password\"\r\n                type=\"password\"\r\n                name=\"currentPassword\"\r\n                value={currentPassword}\r\n                onChange={this.handleChange}\r\n              />\r\n              <Form.Input\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                value={newPassword}\r\n                onChange={this.handleChange}\r\n              />\r\n              <Form.Input\r\n                label=\"Status\"\r\n                placeholder=\"Who are you (e.g: Writer)\"\r\n                type=\"text\"\r\n                name=\"status\"\r\n                value={status}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid>\r\n          <Button\r\n            color=\"blue\"\r\n            loading={isLoading}\r\n            disabled={isLoading}\r\n            onClick={this.handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport EditProfile from '../../components/editprofile';\r\nimport Modal from '../../components/modal';\r\nimport {hideModal, editProfileReset, editProfile} from '../../actions';\r\n\r\nclass EditProfileModal extends Component {\r\n  componentWillMount() {\r\n    if (!this.props.isAuthenticated) {\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isAuthenticated,\r\n      isEditing,\r\n      error,\r\n      avatar,\r\n      name,\r\n      editProfile,\r\n      handleClose,\r\n      success,\r\n    } = this.props;\r\n\r\n    return !isAuthenticated ? null : (\r\n      <Modal onClose={handleClose} dialogStyle={{minWidth: '500px'}}>\r\n        <EditProfile\r\n          avatar={avatar}\r\n          name={name}\r\n          handleEdit={editProfile}\r\n          isLoading={isEditing}\r\n          error={error}\r\n          success={success}\r\n        />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  isEditing: state.auth.isEditing,\r\n  error: state.auth.editError,\r\n  avatar: state.auth.avatar,\r\n  name: state.auth.name,\r\n  success: state.auth.editSuccess,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  editProfile: newProfile => {\r\n    dispatch(editProfile(newProfile));\r\n  },\r\n  handleClose: () => {\r\n    dispatch(hideModal());\r\n    dispatch(editProfileReset());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(EditProfileModal);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport RegisterModal from './register';\r\nimport LoginModal from './login';\r\nimport EditProfileModal from './editprofile';\r\n\r\nconst ModalContainer = props => {\r\n  switch (props.modalType) {\r\n    case 'REGISTER':\r\n      return <RegisterModal />;\r\n    case 'LOGIN':\r\n      return <LoginModal />;\r\n    case 'EDIT_PROFILE':\r\n      return <EditProfileModal />;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  modalType: state.modal.modalType,\r\n  modalProps: state.modal.modalProps, // for future use if need to pass props\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalContainer);\r\n","import React, {Component} from 'react';\r\nimport Avatar from '../avatar';\r\nimport './styles.css';\r\n\r\nclass Profile extends Component {\r\n  formatDateTime(datetime) {\r\n    return datetime.split('.')[0].replace('T', ' ');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      username,\r\n      avatar,\r\n      bio,\r\n      status,\r\n      isStaff,\r\n      dateJoined,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"profileContainer\">\r\n        <div>\r\n          <Avatar className=\"profileAvatar\" avatar={avatar} centered={false} />\r\n        </div>\r\n        <div className=\"profileInfo\">\r\n          <div className=\"name\">{name}</div>\r\n          <div className=\"username\">\r\n            <strong>@{username}</strong>\r\n            <b className=\"staffStatus\">{isStaff ? ' (Staff) ' : ''}</b>\r\n          </div>\r\n          <div className=\"status\">\r\n            <strong>Status: </strong>\r\n            {status}\r\n          </div>\r\n          <div className=\"dateJoined\">\r\n            <strong>Joined: </strong>\r\n            {dateJoined}\r\n          </div>\r\n          <div className=\"bio\">\r\n            <strong>Bio: </strong>\r\n            {bio}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchUserProfile} from '../../actions';\r\nimport StatusMessage from '../../components/statusmessage';\r\nimport Profile from '../../components/profile';\r\nimport './styles.css';\r\n\r\nclass UserProfileContainer extends Component {\r\n  componentDidMount() {\r\n    const {username} = this.props.match.params;\r\n    this.props.fetchUserProfile(username);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const {username: oldUsername} = this.props.match.params;\r\n    const {username: futureUsername} = newProps.match.params;\r\n    if (oldUsername !== futureUsername) {\r\n      this.props.fetchUserProfile(futureUsername);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {isLoading, error, profile} = this.props;\r\n\r\n    if (error || !profile || isLoading) {\r\n      return (\r\n        <StatusMessage\r\n          error={error || !profile}\r\n          errorClassName=\"userProfile-error\"\r\n          errorMessage={error}\r\n          loading={isLoading}\r\n          loadingMessage={`We are fetching the user profile for you`}\r\n          type=\"default\"\r\n        />\r\n      );\r\n    }\r\n\r\n    const {\r\n      name,\r\n      username,\r\n      status,\r\n      bio,\r\n      avatar,\r\n      is_staff,\r\n      date_joined,\r\n    } = profile;\r\n\r\n    return (\r\n      <Profile\r\n        username={username}\r\n        name={name}\r\n        avatar={avatar}\r\n        status={status}\r\n        bio={bio}\r\n        dateJoined={date_joined}\r\n        isStaff={is_staff}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.userProfile.isLoading,\r\n  profile: state.userProfile.profile,\r\n  error: state.userProfile.error,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchUserProfile: username => {\r\n    dispatch(fetchUserProfile(username));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UserProfileContainer);\r\n","import React, {Component} from 'react';\r\nimport {Card} from 'semantic-ui-react';\r\nimport Avatar from '../avatar';\r\nimport {Link} from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nclass UserCard extends Component {\r\n  render() {\r\n    const {name, username, isStaff, avatar} = this.props;\r\n\r\n    return (\r\n      <Card>\r\n        <Avatar\r\n          className=\"userCard-avatar\"\r\n          avatar={avatar}\r\n          link={`/user/${username}`}\r\n        />\r\n        <Card.Content>\r\n          <Card.Header>{name}</Card.Header>\r\n          <Card.Meta>\r\n            <Link to={`/user/${username}`}>@{username}</Link>\r\n            <b style={{color: 'red', fontSize: '12px'}}>\r\n              {isStaff ? ' (Staff) ' : ''}\r\n            </b>\r\n          </Card.Meta>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserCard;\r\n","import React, {Component} from 'react';\r\nimport StatusMessage from '../statusmessage';\r\nimport UserCard from '../usercard';\r\nimport './styles.css';\r\n\r\nexport default class UserList extends Component {\r\n  render() {\r\n    const {isLoading, error, users} = this.props;\r\n\r\n    if (error || !users || isLoading || users.length === 0) {\r\n      return (\r\n        <StatusMessage\r\n          error={error || !users}\r\n          errorClassName=\"users-error\"\r\n          errorMessage={error}\r\n          loading={isLoading}\r\n          loadingMessage={`We are fetching the users for you`}\r\n          nothing={users && users.length === 0}\r\n          nothingMessage={`No user to display`}\r\n          nothingClassName=\"users-error\"\r\n          type=\"default\"\r\n        />\r\n      );\r\n    }\r\n\r\n    const userCardList = users.map(user => {\r\n      const {name, username, avatar, is_staff} = user;\r\n\r\n      return (\r\n        <div key={username} className=\"userCard\">\r\n          <UserCard\r\n            username={username}\r\n            name={name}\r\n            avatar={avatar}\r\n            isStaff={is_staff}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n    return <div className=\"usersContainer\">{userCardList}</div>;\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchUsers} from '../../actions';\r\nimport UserList from '../../components/userlist';\r\n\r\nclass UsersContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchUsers();\r\n  }\r\n\r\n  render() {\r\n    return <UserList {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.users.isLoading,\r\n  users: state.users.users,\r\n  error: state.users.error,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchUsers: () => {\r\n    dispatch(fetchUsers());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UsersContainer);\r\n","import React, {Component} from 'react';\r\nimport {EditorState, ContentState, convertFromRaw} from 'draft-js';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport './styles.css';\r\nimport {Editor} from 'react-draft-wysiwyg';\r\nimport {imageUploadApi} from '../../api/image';\r\n\r\nexport default class RichEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let {content, editorState} = this.props;\r\n    editorState = editorState || this.convertToEditorState(content);\r\n    this.state = {\r\n      editorState,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const {editorState: newEditorState, content: newContent} = newProps;\r\n    const editorState = newEditorState || this.convertToEditorState(newContent);\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  }\r\n\r\n  convertToEditorState = content => {\r\n    let editorState = EditorState.createEmpty();\r\n    if (content) {\r\n      try {\r\n        const contentState = convertFromRaw(JSON.parse(content));\r\n        editorState = EditorState.createWithContent(contentState);\r\n      } catch (error) {\r\n        const contentState = ContentState.createFromText(content);\r\n        editorState = EditorState.createWithContent(contentState);\r\n      }\r\n    }\r\n    return editorState;\r\n  };\r\n\r\n  onEditorStateChange = editorState => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  uploadImageCallBack = file => {\r\n    return new Promise((resolve, reject) => {\r\n      imageUploadApi(file, false)\r\n        .then(response => {\r\n          /* react-draft-wywsgi need data.link as the uploaded image url\r\n          so we had to slightly modify the result from cloudinary response */\r\n          let newResponse = {\r\n            data: {\r\n              link: response.data.secure_url,\r\n            },\r\n          };\r\n          resolve(newResponse);\r\n        })\r\n        .catch(error => {\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      readOnly,\r\n      wrapperClassName,\r\n      toolbarClassName,\r\n      editorClassName,\r\n      handleBeforeInput,\r\n      handlePastedText,\r\n      onEditorStateChange,\r\n      editorState,\r\n      uploadImageCallBack,\r\n      placeholder,\r\n    } = this.props;\r\n    return (\r\n      <Editor\r\n        toolbar={{\r\n          options: [\r\n            'inline',\r\n            'blockType',\r\n            'fontSize',\r\n            'fontFamily',\r\n            'list',\r\n            'textAlign',\r\n            'colorPicker',\r\n            'link',\r\n            'emoji',\r\n            'image',\r\n            'history',\r\n          ],\r\n          inline: {inDropdown: true},\r\n          list: {inDropdown: true},\r\n          textAlign: {inDropdown: true},\r\n          link: {inDropdown: true},\r\n          image: {\r\n            uploadCallback: uploadImageCallBack || this.uploadImageCallBack,\r\n            alt: {present: true},\r\n            previewImage: true,\r\n          },\r\n          fontFamily: {\r\n            options: [\r\n              'Arial',\r\n              'Georgia',\r\n              'Impact',\r\n              'Tahoma',\r\n              'Roboto',\r\n              'Times New Roman',\r\n              'Verdana',\r\n            ],\r\n          },\r\n        }}\r\n        editorState={editorState || this.state.editorState}\r\n        wrapperClassName={wrapperClassName || 'richEditor-wrapper'}\r\n        toolbarClassName={toolbarClassName || 'richEditor-toolbar'}\r\n        editorClassName={editorClassName || 'richEditor-editor'}\r\n        onEditorStateChange={onEditorStateChange || this.onEditorStateChange}\r\n        readOnly={readOnly}\r\n        toolbarHidden={readOnly}\r\n        handleBeforeInput={handleBeforeInput}\r\n        handlePastedText={handlePastedText}\r\n        placeholder={placeholder}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Segment, Grid, Icon, Dropdown} from 'semantic-ui-react';\r\nimport RichEditor from '../richeditor';\r\nimport Avatar from '../avatar';\r\nimport './styles.css';\r\n\r\nexport default class Post extends Component {\r\n  onDelete = () => {\r\n    const {deleteAction, id, threadID, isThread} = this.props;\r\n    if (isThread) {\r\n      deleteAction(threadID);\r\n    } else {\r\n      deleteAction(id, threadID);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      isThread,\r\n      content,\r\n      createdAt,\r\n      creator,\r\n      authenticatedUsername,\r\n      authenticatedIsStaff,\r\n      deletePostList,\r\n    } = this.props;\r\n\r\n    const color = isThread ? 'black' : null;\r\n    const deleteText = isThread ? 'Delete Thread' : 'Delete Post';\r\n    const actions = (\r\n      <div className=\"post-dropdown\">\r\n        <Dropdown simple icon=\"caret down\" direction=\"left\">\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item\r\n              onClick={this.onDelete}\r\n              icon=\"delete\"\r\n              text={deleteText}\r\n            />\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n    const isLoading = !isThread && deletePostList.indexOf(id) >= 0;\r\n    return (\r\n      <Segment loading={isLoading} color={color}>\r\n        <Grid textAlign=\"left\" padded=\"horizontally\">\r\n          <Grid.Column width={4}>\r\n            <Grid.Row>\r\n              <div className=\"post-row\">\r\n                <Avatar\r\n                  className=\"post-avatar\"\r\n                  avatar={creator.avatar}\r\n                  centered={false}\r\n                  link={`/user/${creator.username}`}\r\n                />\r\n                <div className=\"post-column\">\r\n                  <div className=\"post-name\">{creator.name}</div>\r\n                  <div className=\"post-username\">\r\n                    <Link to={`/user/${creator.username}`}>\r\n                      <Icon name=\"user\" />\r\n                      {creator.username}\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"post-status\">\r\n                    {creator.status || 'Member'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Grid.Row>\r\n          </Grid.Column>\r\n          <Grid.Column width={12}>\r\n            <div className=\"post-time\">\r\n              {createdAt}\r\n              {(authenticatedIsStaff ||\r\n                authenticatedUsername === creator.username) &&\r\n                actions}\r\n            </div>\r\n            <RichEditor\r\n              readOnly={true}\r\n              content={content}\r\n              wrapperClassName={\r\n                false ? 'post-wrapper-edit' : 'post-wrapper-read'\r\n              }\r\n              editorClassName=\"post-editor\"\r\n              toolbarClassName=\"post-toolbar\"\r\n            />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {getSelectedBlock} from 'draftjs-utils';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport {List} from 'immutable';\r\nimport {EditorState, convertToRaw, Modifier} from 'draft-js';\r\nimport {Form, Icon, Button} from 'semantic-ui-react';\r\nimport './styles.css';\r\nimport RichEditor from '../richeditor';\r\nimport StatusMessage from '../statusmessage';\r\n\r\nexport default class NewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const {success} = newProps;\r\n    if (success) {\r\n      this.setState({\r\n        editorState: EditorState.createEmpty(),\r\n      });\r\n    }\r\n  }\r\n\r\n  onEditorStateChange = editorState => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    const {editorState} = this.state;\r\n    const {threadID, createPost} = this.props;\r\n    const content = JSON.stringify(\r\n      convertToRaw(editorState.getCurrentContent()),\r\n    );\r\n    let newPost = {\r\n      thread_id: threadID,\r\n      content: content,\r\n    };\r\n    createPost(newPost);\r\n  };\r\n\r\n  isValidLength = contentState => {\r\n    const maxLength = this.props.maxLength || 1000;\r\n    return contentState.getPlainText('').length <= maxLength;\r\n  };\r\n\r\n  handleBeforeInput = input => {\r\n    const {editorState} = this.state;\r\n    if (!this.isValidLength(editorState.getCurrentContent())) {\r\n      return 'handled';\r\n    }\r\n  };\r\n\r\n  handlePastedText = (text, html, editorState, onChange) => {\r\n    if (html) {\r\n      const contentBlock = htmlToDraft(html);\r\n      let contentState = editorState.getCurrentContent();\r\n      contentBlock.entityMap.forEach((value, key) => {\r\n        contentState = contentState.mergeEntityData(key, value);\r\n      });\r\n      contentState = Modifier.replaceWithFragment(\r\n        contentState,\r\n        editorState.getSelection(),\r\n        new List(contentBlock.contentBlocks),\r\n      );\r\n      if (!this.isValidLength(contentState)) {\r\n        return 'handled';\r\n      }\r\n      onChange(\r\n        EditorState.push(editorState, contentState, 'insert-characters'),\r\n      );\r\n      return true;\r\n    }\r\n    const selectedBlock = getSelectedBlock(editorState);\r\n    const newState = Modifier.replaceText(\r\n      editorState.getCurrentContent(),\r\n      editorState.getSelection(),\r\n      text,\r\n      editorState.getCurrentInlineStyle(),\r\n    );\r\n    if (!this.isValidLength(newState)) {\r\n      return 'handled';\r\n    }\r\n    onChange(EditorState.push(editorState, newState, 'insert-characters'));\r\n    if (selectedBlock && selectedBlock.type === 'code') {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {isAuthenticated, isLoading, error} = this.props;\r\n    if (!isAuthenticated) {\r\n      return (\r\n        <div className=\"newPost-none\">{'Please sign in to post a reply'}</div>\r\n      );\r\n    }\r\n    const {editorState} = this.state;\r\n    const statusMessage = (\r\n      <StatusMessage\r\n        error={error}\r\n        errorClassName=\"newPost-message\"\r\n        errorMessage={error || 'Oops! Something went wrong.'}\r\n        type=\"modal\"\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className=\"newPost-show\">\r\n        {statusMessage}\r\n        <Form loading={isLoading} className=\"attached fluid segment\">\r\n          <RichEditor\r\n            placeholder=\"Start typing your post content here...\"\r\n            editorState={editorState}\r\n            wrapperClassName=\"newPost-wrapper\"\r\n            toolbarClassName=\"newPost-toolbar\"\r\n            editorClassName=\"newPost-editor\"\r\n            onEditorStateChange={this.onEditorStateChange}\r\n            handleBeforeInput={this.handleBeforeInput}\r\n            handlePastedText={this.handlePastedText}\r\n          />\r\n          <Button\r\n            color=\"blue\"\r\n            size=\"small\"\r\n            loading={isLoading}\r\n            disabled={isLoading}\r\n            onClick={this.onSubmit}>\r\n            <Icon name=\"write\" />\r\n            Post\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Segment, Icon} from 'semantic-ui-react';\r\nimport StatusMessage from '../statusmessage';\r\nimport Post from '../post';\r\nimport NewPost from '../newpost';\r\nimport './styles.css';\r\n\r\nexport default class Thread extends Component {\r\n  render() {\r\n    const {\r\n      id,\r\n      isLoading,\r\n      name,\r\n      content,\r\n      pinned,\r\n      creator,\r\n      createdAt,\r\n      posts,\r\n      error,\r\n      isAuthenticated,\r\n      createPost,\r\n      newPostSuccess,\r\n      newPostLoading,\r\n      newPostError,\r\n      authenticatedUsername,\r\n      authenticatedIsStaff,\r\n      deletePostList,\r\n      deletePost,\r\n      isDeleting,\r\n      deleteError,\r\n      deleteThread,\r\n    } = this.props;\r\n\r\n    if (error || deleteError || isLoading || isDeleting || !name) {\r\n      let loadingMessage = 'We are fetching the thread for you';\r\n      if (isDeleting) {\r\n        loadingMessage = 'We are deleting the thread for you';\r\n      }\r\n      return (\r\n        <StatusMessage\r\n          error={error || deleteError || !name} // because a thread name cannot be empty\r\n          errorClassName=\"thread-error\"\r\n          errorMessage={error || deleteError}\r\n          loading={isLoading || isDeleting}\r\n          loadingMessage={loadingMessage}\r\n          nothing={!name}\r\n          nothingMessage={'Thread does not exist'}\r\n          type=\"default\"\r\n        />\r\n      );\r\n    }\r\n\r\n    const threadPost = (\r\n      <Post\r\n        id={id}\r\n        threadID={id}\r\n        isThread={true}\r\n        content={content}\r\n        createdAt={createdAt}\r\n        creator={creator}\r\n        authenticatedUsername={authenticatedUsername}\r\n        authenticatedIsStaff={authenticatedIsStaff}\r\n        deleteAction={deleteThread}\r\n      />\r\n    );\r\n\r\n    const postsList =\r\n      posts.length === 0\r\n        ? null\r\n        : posts.map(post => {\r\n            const {\r\n              id: postID,\r\n              content: postContent,\r\n              created_at: postCreatedAt,\r\n              creator: postCreator,\r\n            } = post;\r\n\r\n            return (\r\n              <Post\r\n                key={postID}\r\n                threadID={id}\r\n                id={postID}\r\n                isThread={false}\r\n                content={postContent}\r\n                createdAt={postCreatedAt}\r\n                creator={postCreator}\r\n                authenticatedUsername={authenticatedUsername}\r\n                authenticatedIsStaff={authenticatedIsStaff}\r\n                deletePostList={deletePostList}\r\n                deleteAction={deletePost}\r\n              />\r\n            );\r\n          });\r\n\r\n    return (\r\n      <div className=\"threadContainer\">\r\n        <div className=\"thread-title\">\r\n          <Icon name={pinned ? 'pin' : 'talk outline'} />\r\n          {name}\r\n        </div>\r\n        <Segment.Group className=\"thread-list\">\r\n          {threadPost}\r\n          {postsList}\r\n        </Segment.Group>\r\n        <NewPost\r\n          isAuthenticated={isAuthenticated}\r\n          threadID={id}\r\n          createPost={createPost}\r\n          success={newPostSuccess}\r\n          isLoading={newPostLoading}\r\n          error={newPostError}\r\n          maxLength={2000}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createPost, fetchThread, deletePost, deleteThread} from '../../actions';\r\nimport Thread from '../../components/thread';\r\n\r\nclass ThreadContainer extends Component {\r\n  componentDidMount() {\r\n    const {thread} = this.props.match.params;\r\n    this.props.fetchThread(thread);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const {thread} = this.props.match.params;\r\n    const {thread: newThread} = newProps.match.params;\r\n    if (thread !== newThread) {\r\n      this.props.fetchThread(newThread);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {thread: threadID} = this.props.match.params;\r\n    const {\r\n      isLoading,\r\n      name,\r\n      content,\r\n      pinned,\r\n      creator,\r\n      createdAt,\r\n      posts,\r\n      error,\r\n      isAuthenticated,\r\n      createPost,\r\n      newPostLoading,\r\n      newPostError,\r\n      newPostSuccess,\r\n      authenticatedUsername,\r\n      authenticatedIsStaff,\r\n      deletePostList,\r\n      deletePost,\r\n      isDeleting,\r\n      deleteError,\r\n      deleteThread,\r\n    } = this.props;\r\n    return (\r\n      <Thread\r\n        id={threadID}\r\n        isLoading={isLoading}\r\n        name={name}\r\n        content={content}\r\n        pinned={pinned}\r\n        creator={creator}\r\n        createdAt={createdAt}\r\n        posts={posts}\r\n        error={error}\r\n        isAuthenticated={isAuthenticated}\r\n        createPost={createPost}\r\n        newPostSuccess={newPostSuccess}\r\n        newPostLoading={newPostLoading}\r\n        newPostError={newPostError}\r\n        authenticatedUsername={authenticatedUsername}\r\n        authenticatedIsStaff={authenticatedIsStaff}\r\n        deletePostList={deletePostList}\r\n        deletePost={deletePost}\r\n        isDeleting={isDeleting}\r\n        deleteError={deleteError}\r\n        deleteThread={deleteThread}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.thread.isLoading,\r\n  name: state.thread.name,\r\n  content: state.thread.content,\r\n  pinned: state.thread.pinned,\r\n  creator: state.thread.creator,\r\n  createdAt: state.thread.createdAt,\r\n  posts: state.thread.posts,\r\n  error: state.thread.error,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  authenticatedUsername: state.auth.username,\r\n  authenticatedIsStaff: state.auth.isStaff,\r\n  newPostSuccess: state.thread.newPostSuccess,\r\n  newPostLoading: state.thread.newPostLoading,\r\n  newPostError: state.thread.newPostError,\r\n  deletePostList: state.thread.deletePostList,\r\n  isDeleting: state.thread.isDeleting,\r\n  deleteError: state.thread.deleteError,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchThread: thread => {\r\n    dispatch(fetchThread(thread));\r\n  },\r\n  createPost: newPost => {\r\n    dispatch(createPost(newPost));\r\n  },\r\n  deletePost: (id, threadID) => {\r\n    dispatch(deletePost(id, threadID));\r\n  },\r\n  deleteThread: id => {\r\n    dispatch(deleteThread(id));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ThreadContainer);\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react';\r\nimport StatusMessage from '../statusmessage';\r\nimport Avatar from '../avatar';\r\nimport './styles.css';\r\n\r\nexport default class ForumList extends Component {\r\n  render() {\r\n    const {isLoading, error, forums} = this.props;\r\n\r\n    if (error || !forums || isLoading || forums.length === 0) {\r\n      return (\r\n        <StatusMessage\r\n          error={error || !forums}\r\n          errorClassName=\"home-error\"\r\n          errorMessage={error}\r\n          loading={isLoading}\r\n          loadingMessage={'We are fetching the homepage for you'}\r\n          nothing={forums && forums.length === 0}\r\n          nothingMessage={'No forum to display'}\r\n          nothingClassName=\"home-error\"\r\n          type=\"default\"\r\n        />\r\n      );\r\n    }\r\n\r\n    const forumCardList = forums.map(forum => {\r\n      const {\r\n        name,\r\n        slug,\r\n        description,\r\n        posts_count,\r\n        threads_count,\r\n        last_activity,\r\n      } = forum;\r\n\r\n      let lastActivity = (\r\n        <div className=\"home-text home-vertical\">{'—  No activity —'}</div>\r\n      );\r\n\r\n      if (last_activity) {\r\n        let {\r\n          thread_id,\r\n          thread_name,\r\n          username,\r\n          avatar,\r\n          pinned,\r\n          naturaltime,\r\n        } = last_activity;\r\n\r\n        thread_name =\r\n          thread_name.length > 43\r\n            ? thread_name.substring(0, 43) + '...'\r\n            : thread_name;\r\n        lastActivity = (\r\n          <div className=\"home-row\">\r\n            <Avatar\r\n              className=\"home-avatar\"\r\n              avatar={avatar}\r\n              centered={false}\r\n              link={`/user/${username}`}\r\n            />\r\n            <div className=\"home-column\">\r\n              <div>\r\n                <Icon name={pinned ? 'pin' : 'talk outline'} />\r\n                <Link to={`/thread/${thread_id}`}>{thread_name}</Link>\r\n              </div>\r\n              <div className=\"home-meta\">\r\n                <Link to={`/user/${username}`}>\r\n                  <Icon name=\"user\" />\r\n                  {username}\r\n                </Link>\r\n                <b>{`  —  ${naturaltime}`}</b>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <Segment vertical key={slug}>\r\n          <Grid textAlign=\"left\" padded=\"horizontally\">\r\n            <Grid.Column width={7}>\r\n              <Grid.Row>\r\n                <Icon name=\"edit\" />\r\n                <Link to={`/forum/${slug}`}>{name}</Link>\r\n              </Grid.Row>\r\n              <Grid.Row>{description}</Grid.Row>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <div className=\"home-column home-stats home-vertical\">\r\n                <div style={{paddingBottom: '5px'}}>\r\n                  <Icon name=\"write\" />\r\n                  {threads_count}\r\n                  {threads_count > 1 ? ' threads' : ' thread'}\r\n                </div>\r\n                <div>\r\n                  <Icon name=\"comment outline\" />\r\n                  {posts_count}\r\n                  {posts_count > 1 ? ' posts' : ' post'}\r\n                </div>\r\n              </div>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>{lastActivity}</Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"homeContainer\">\r\n        <Segment.Group className=\"home-list\">{forumCardList}</Segment.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchForums} from '../../actions';\r\nimport ForumList from '../../components/forumlist';\r\n\r\nclass HomeContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchForums();\r\n  }\r\n\r\n  render() {\r\n    return <ForumList {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.home.isLoading,\r\n  forums: state.home.forums,\r\n  error: state.home.error,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchForums: () => {\r\n    dispatch(fetchForums());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(HomeContainer);\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react';\r\nimport StatusMessage from '../statusmessage';\r\nimport Avatar from '../avatar';\r\nimport './styles.css';\r\n\r\nexport default class ThreadList extends Component {\r\n  render() {\r\n    const {isLoading, error, threads} = this.props;\r\n\r\n    if (error || !threads || isLoading || threads.length === 0) {\r\n      return (\r\n        <StatusMessage\r\n          error={error || !threads}\r\n          errorClassName=\"forum-error\"\r\n          errorMessage={error}\r\n          loading={isLoading}\r\n          loadingMessage={`We are fetching the forum for you`}\r\n          nothing={threads && threads.length === 0}\r\n          nothingMessage={`No threads to display`}\r\n          nothingClassName=\"forum-error\"\r\n          type=\"default\"\r\n        />\r\n      );\r\n    }\r\n\r\n    const threadList = threads.map(thread => {\r\n      let {\r\n        id,\r\n        name,\r\n        pinned,\r\n        creator,\r\n        avatar,\r\n        naturaltime,\r\n        replies_count,\r\n        last_activity,\r\n      } = thread;\r\n\r\n      name = name.length > 57 ? name.substring(0, 55) + '...' : name;\r\n\r\n      let lastActivity = last_activity ? (\r\n        <div className=\"forum-row\">\r\n          <Avatar\r\n            className=\"forum-avatar\"\r\n            avatar={last_activity.avatar}\r\n            centered={false}\r\n            link={`/user/${last_activity.username}`}\r\n          />\r\n          <div className=\"forum-column\">\r\n            <div className=\"forum-name\">{last_activity.name}</div>\r\n            <div className=\"forum-meta\">\r\n              <Link to={`/user/${last_activity.username}`}>\r\n                <Icon name=\"user\" />\r\n                {last_activity.username}\r\n              </Link>\r\n              <b>{`  —  ${last_activity.naturaltime}`}</b>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"forum-text forum-vertical\">{'—  No activity —'}</div>\r\n      );\r\n\r\n      return (\r\n        <Segment vertical key={id}>\r\n          <Grid textAlign=\"left\" padded=\"horizontally\">\r\n            <Grid.Column width={7}>\r\n              <Grid.Row>\r\n                <div className=\"forum-row\">\r\n                  <Avatar\r\n                    className=\"forum-avatar\"\r\n                    avatar={avatar}\r\n                    centered={false}\r\n                    link={`/user/${creator}`}\r\n                  />\r\n                  <div className=\"forum-column\">\r\n                    <div>\r\n                      <Icon name={pinned ? 'pin' : 'talk outline'} />\r\n                      <Link to={`/thread/${id}`}>{name}</Link>\r\n                    </div>\r\n                    <div className=\"forum-meta\">\r\n                      <Link to={`/user/${creator}`}>\r\n                        <Icon name=\"user\" />\r\n                        {creator}\r\n                      </Link>\r\n                      <b>{`  —  ${naturaltime}`}</b>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Grid.Row>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <div className=\"forum-column forum-stats forum-vertical\">\r\n                <div style={{paddingBottom: '5px'}}>\r\n                  <Icon name=\"comment outline\" />\r\n                  {replies_count}\r\n                  {replies_count > 1 ? ' replies' : ' reply'}\r\n                </div>\r\n              </div>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>{lastActivity}</Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"forumContainer\">\r\n        <Segment.Group className=\"forum-list\">{threadList}</Segment.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {getSelectedBlock} from 'draftjs-utils';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport {List} from 'immutable';\r\nimport {\r\n  EditorState,\r\n  ContentState,\r\n  convertFromRaw,\r\n  convertToRaw,\r\n  Modifier,\r\n} from 'draft-js';\r\nimport {Form, Icon, Divider, Button} from 'semantic-ui-react';\r\nimport './styles.css';\r\nimport RichEditor from '../richeditor';\r\nimport StatusMessage from '../statusmessage';\r\n\r\nexport default class NewThread extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {name, content} = this.props;\r\n    let editorState = this.convertToEditorState(content);\r\n    this.state = {\r\n      name,\r\n      editorState,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const {name: newName, content: newContent} = newProps;\r\n    const editorState = this.convertToEditorState(newContent);\r\n    this.setState({\r\n      name: newName,\r\n      editorState,\r\n    });\r\n  }\r\n\r\n  convertToEditorState = content => {\r\n    let editorState = EditorState.createEmpty();\r\n    if (content) {\r\n      try {\r\n        const contentState = convertFromRaw(JSON.parse(content));\r\n        editorState = EditorState.createWithContent(contentState);\r\n      } catch (error) {\r\n        const contentState = ContentState.createFromText(content);\r\n        editorState = EditorState.createWithContent(contentState);\r\n      }\r\n    }\r\n    return editorState;\r\n  };\r\n\r\n  toggleShowEditor = () => {\r\n    this.props.toggleShowEditor();\r\n  };\r\n\r\n  onSave = () => {\r\n    // save to redux store (uncontrolled input way)\r\n    const {name, editorState} = this.state;\r\n    const content = JSON.stringify(\r\n      convertToRaw(editorState.getCurrentContent()),\r\n    );\r\n    this.props.updateNewThread({\r\n      name: name,\r\n      content: content,\r\n    });\r\n    this.toggleShowEditor();\r\n  };\r\n\r\n  onCancel = () => {\r\n    // reset & clear everything\r\n    const editorState = EditorState.createEmpty();\r\n    this.setState({\r\n      name: '',\r\n      editorState,\r\n    });\r\n    const content = JSON.stringify(\r\n      convertToRaw(editorState.getCurrentContent()),\r\n    );\r\n    this.props.updateNewThread({\r\n      name: '',\r\n      content: content,\r\n    });\r\n    this.toggleShowEditor();\r\n  };\r\n\r\n  onNameChange = (e, {value}) => {\r\n    this.setState({\r\n      name: value,\r\n    });\r\n  };\r\n\r\n  onEditorStateChange = editorState => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  isFormValid = () => {\r\n    const {name} = this.state;\r\n    return name;\r\n  };\r\n\r\n  onSubmit = () => {\r\n    if (this.isFormValid()) {\r\n      const {name, editorState} = this.state;\r\n      const {forum, createThread} = this.props;\r\n      const content = JSON.stringify(\r\n        convertToRaw(editorState.getCurrentContent()),\r\n      );\r\n      let newThread = {\r\n        name: name,\r\n        forum: forum,\r\n        content: content,\r\n      };\r\n      createThread(newThread);\r\n    }\r\n  };\r\n\r\n  isValidLength = contentState => {\r\n    const maxLength = this.props.maxLength || 100;\r\n    return contentState.getPlainText('').length <= maxLength;\r\n  };\r\n\r\n  handleBeforeInput = input => {\r\n    const {editorState} = this.state;\r\n    if (!this.isValidLength(editorState.getCurrentContent())) {\r\n      return 'handled';\r\n    }\r\n  };\r\n\r\n  handlePastedText = (text, html, editorState, onChange) => {\r\n    if (html) {\r\n      const contentBlock = htmlToDraft(html);\r\n      let contentState = editorState.getCurrentContent();\r\n      contentBlock.entityMap.forEach((value, key) => {\r\n        contentState = contentState.mergeEntityData(key, value);\r\n      });\r\n      contentState = Modifier.replaceWithFragment(\r\n        contentState,\r\n        editorState.getSelection(),\r\n        new List(contentBlock.contentBlocks),\r\n      );\r\n      if (!this.isValidLength(contentState)) {\r\n        return 'handled';\r\n      }\r\n      onChange(\r\n        EditorState.push(editorState, contentState, 'insert-characters'),\r\n      );\r\n      return true;\r\n    }\r\n    const selectedBlock = getSelectedBlock(editorState);\r\n    const newState = Modifier.replaceText(\r\n      editorState.getCurrentContent(),\r\n      editorState.getSelection(),\r\n      text,\r\n      editorState.getCurrentInlineStyle(),\r\n    );\r\n    if (!this.isValidLength(newState)) {\r\n      return 'handled';\r\n    }\r\n    onChange(EditorState.push(editorState, newState, 'insert-characters'));\r\n    if (selectedBlock && selectedBlock.type === 'code') {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isAuthenticated,\r\n      isLoading,\r\n      success,\r\n      id,\r\n      error,\r\n      showEditor,\r\n    } = this.props;\r\n    const {name, editorState} = this.state;\r\n    if (!isAuthenticated) {\r\n      return <div className=\"newThread-none\" />;\r\n    }\r\n\r\n    const statusMessage = (\r\n      <StatusMessage\r\n        error={error}\r\n        errorClassName=\"newThread-message\"\r\n        errorMessage={error || 'Oops! Something went wrong.'}\r\n        success={success}\r\n        successClassName=\"newThread-message\"\r\n        successMessage={\r\n          <Link to={`/thread/${id}`}>{'Successful on creating thread'}</Link>\r\n        }\r\n        type=\"modal\"\r\n      />\r\n    );\r\n\r\n    if (!showEditor) {\r\n      return (\r\n        <div>\r\n          {statusMessage} {/*this will only show the success message*/}\r\n          <div className=\"newThread-hidden\">\r\n            <Button\r\n              size=\"small\"\r\n              color=\"blue\"\r\n              floated=\"left\"\r\n              onClick={this.toggleShowEditor}>\r\n              <Icon name=\"edit\" />\r\n              New Thread\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"newThread-show\">\r\n        {statusMessage}\r\n        <Form loading={isLoading} className=\"attached fluid segment\">\r\n          <Form.Input\r\n            required\r\n            fluid\r\n            transparent\r\n            icon=\"edit\"\r\n            iconPosition=\"left\"\r\n            size=\"big\"\r\n            placeholder=\"Name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.onNameChange}\r\n          />\r\n          <Divider />\r\n          <RichEditor\r\n            placeholder=\"Start typing your thread content here...\"\r\n            editorState={editorState}\r\n            wrapperClassName=\"newThread-wrapper\"\r\n            toolbarClassName=\"newThread-toolbar\"\r\n            editorClassName=\"newThread-editor\"\r\n            onEditorStateChange={this.onEditorStateChange}\r\n            handleBeforeInput={this.handleBeforeInput}\r\n            handlePastedText={this.handlePastedText}\r\n          />\r\n          <Button\r\n            color=\"blue\"\r\n            size=\"small\"\r\n            loading={isLoading}\r\n            disabled={isLoading}\r\n            onClick={this.onSubmit}>\r\n            <Icon name=\"edit\" />\r\n            Post thread\r\n          </Button>\r\n          <Button\r\n            color=\"red\"\r\n            role=\"none\"\r\n            size=\"small\"\r\n            disabled={isLoading}\r\n            onClick={this.onSave}>\r\n            <Icon name=\"save\" />\r\n            Save Draft\r\n          </Button>\r\n          <Button\r\n            role=\"none\"\r\n            size=\"small\"\r\n            disabled={isLoading}\r\n            onClick={this.onCancel}>\r\n            <Icon name=\"cancel\" />\r\n            Clear\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  createThreadSave,\r\n  createThreadToggle,\r\n  fetchForum,\r\n  createThread,\r\n} from '../../actions';\r\nimport ThreadList from '../../components/threadlist';\r\nimport NewThread from '../../components/newthread';\r\n\r\nclass ForumContainer extends Component {\r\n  componentDidMount() {\r\n    const {forum} = this.props.match.params;\r\n    this.props.fetchForum(forum);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const {forum: oldForum} = this.props.match.params;\r\n    const {forum: futureForum} = newProps.match.params;\r\n    if (oldForum !== futureForum) {\r\n      this.props.fetchForum(futureForum);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLoading,\r\n      name,\r\n      slug,\r\n      description,\r\n      threads,\r\n      error,\r\n      isAuthenticated,\r\n      newThreadLoading,\r\n      newThreadSuccess,\r\n      newThreadName,\r\n      newThreadContent,\r\n      newThreadId,\r\n      newThreadError,\r\n      newThreadShow,\r\n      createThread,\r\n      createThreadSave,\r\n      createThreadToggle,\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <NewThread\r\n          forum={slug}\r\n          isAuthenticated={isAuthenticated}\r\n          isLoading={newThreadLoading}\r\n          success={newThreadSuccess}\r\n          name={newThreadName}\r\n          content={newThreadContent}\r\n          id={newThreadId}\r\n          error={newThreadError}\r\n          showEditor={newThreadShow}\r\n          createThread={createThread}\r\n          updateNewThread={createThreadSave}\r\n          toggleShowEditor={createThreadToggle}\r\n          maxLength={2000}\r\n        />\r\n        <ThreadList\r\n          isLoading={isLoading}\r\n          name={name}\r\n          slug={slug}\r\n          description={description}\r\n          threads={threads}\r\n          error={error}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.forum.isLoading,\r\n  name: state.forum.name,\r\n  slug: state.forum.slug,\r\n  description: state.forum.description,\r\n  threads: state.forum.threads,\r\n  error: state.forum.error,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  newThreadLoading: state.forum.newThreadLoading,\r\n  newThreadSuccess: state.forum.newThreadSuccess,\r\n  newThreadName: state.forum.newThreadName,\r\n  newThreadContent: state.forum.newThreadContent,\r\n  newThreadId: state.forum.newThreadId,\r\n  newThreadError: state.forum.newThreadError,\r\n  newThreadShow: state.forum.newThreadShow,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchForum: forum => {\r\n    dispatch(fetchForum(forum));\r\n  },\r\n  createThread: newThread => {\r\n    dispatch(createThread(newThread));\r\n  },\r\n  createThreadSave: newThread => {\r\n    dispatch(createThreadSave(newThread));\r\n  },\r\n  createThreadToggle: () => {\r\n    dispatch(createThreadToggle());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ForumContainer);\r\n","import React, {Component} from 'react';\r\nimport {Message, Image} from 'semantic-ui-react';\r\nimport './styles.css';\r\n\r\nclass NotFoundPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"not-found-page\">\r\n          <Message>\r\n            <Message.Content>\r\n              <Message.Header>404 - Page Not Found</Message.Header>\r\n              Sorry, but the page you were trying to view does not exist.\r\n            </Message.Content>\r\n          </Message>\r\n        </div>\r\n        <Image\r\n          className=\"not-found-page-img\"\r\n          src=\"https://i.imgur.com/yG7L3Lb.gif\"\r\n          centered\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NotFoundPage;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport {PersistGate} from 'redux-persist/integration/react';\nimport Loader from './components/loader';\nimport store, {persistor} from './store';\nimport HeaderContainer from './containers/header';\nimport ModalContainer from './containers/modal';\nimport UserProfileContainer from './containers/userprofile';\nimport UsersContainer from './containers/users';\nimport ThreadContainer from './containers/thread';\nimport HomeContainer from './containers/home';\nimport ForumContainer from './containers/forum';\nimport NotFoundPage from './components/notfoundpage';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loader />} persistor={persistor}>\n      <BrowserRouter>\n        <Fragment>\n          <header className=\"header-background\" />\n          <div className=\"app-layout\">\n            <HeaderContainer />\n            <Switch>\n              <Route path=\"/users\" component={UsersContainer} />\n              <Route path=\"/user/:username\" component={UserProfileContainer} />\n              <Route path=\"/forum/:forum\" component={ForumContainer} />\n              <Route path=\"/thread/:thread\" component={ThreadContainer} />\n              <Route exact path=\"/\" component={HomeContainer} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n          <ModalContainer />\n        </Fragment>\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\nregisterServiceWorker();\n"],"sourceRoot":""}